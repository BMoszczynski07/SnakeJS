{"version":3,"file":"bundle.b0f0071daa14676339cb.js","mappings":"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","sources":["webpack://snakejs/webpack/bootstrap","webpack://snakejs/webpack/runtime/global","webpack://snakejs/webpack/runtime/publicPath","webpack://snakejs/./src/script/global/CSSroot.js","webpack://snakejs/./src/script/classes/Preferences.js","webpack://snakejs/./src/assets/point.mp3","webpack://snakejs/./src/assets/gameover.wav","webpack://snakejs/./src/assets/speed_acceleration.wav","webpack://snakejs/./src/assets/jump.wav","webpack://snakejs/./src/assets/start.wav","webpack://snakejs/./src/script/functions/handleInitializeAudio.js","webpack://snakejs/./src/script/functions/RandInt.js","webpack://snakejs/./src/script/classes/Snake.js","webpack://snakejs/./src/script/global/variables.js","webpack://snakejs/./src/script/functions/handleValidateBoardSize.js","webpack://snakejs/./src/script/global/elements.js","webpack://snakejs/./src/script/functions/handleDisplay.js","webpack://snakejs/./src/script/classes/Boost.js","webpack://snakejs/./src/script/functions/GameOver.js","webpack://snakejs/./src/script/functions/handleFoodEaten.js","webpack://snakejs/./src/script/functions/getNewTile.js","webpack://snakejs/./src/script/classes/Food.js","webpack://snakejs/./src/script/global/preferences.js","webpack://snakejs/./src/script/functions/handleBonus.js","webpack://snakejs/./src/assets/SPEED2X.png","webpack://snakejs/./src/assets/SPEED2X.wav","webpack://snakejs/./src/assets/SPEED 2Xlower.png","webpack://snakejs/./src/assets/SPEED 2Xlower.wav","webpack://snakejs/./src/assets/Freeze.png","webpack://snakejs/./src/assets/Freeze.mp3","webpack://snakejs/./src/assets/Bombs.png","webpack://snakejs/./src/assets/bombs.wav","webpack://snakejs/./src/assets/+5 points.wav","webpack://snakejs/./src/assets/-5 points.wav","webpack://snakejs/./src/assets/+5 points.png","webpack://snakejs/./src/assets/-5 points.png","webpack://snakejs/./src/script/global/bonuses.js","webpack://snakejs/./src/assets/Nystagmus.png","webpack://snakejs/./src/assets/nystagmus.wav","webpack://snakejs/./src/script/classes/Bonus.js","webpack://snakejs/./src/script/functions/handlePlaceTile.js","webpack://snakejs/./src/script/functions/handleGenerateBoard.js","webpack://snakejs/./src/script/functions/handleMoveSnake.js","webpack://snakejs/./src/script/functions/handleBonusIsEaten.js","webpack://snakejs/./src/script/functions/handleJump.js","webpack://snakejs/./src/script/functions/handleUpdateSnake.js","webpack://snakejs/./src/script/functions/handleKeyPress.js","webpack://snakejs/./src/script/functions/handleStartGame.js","webpack://snakejs/./src/script.js","webpack://snakejs/./src/script/global/keys.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const root = document.querySelector(\":root\");\r\nexport const rs = getComputedStyle(root);\r\n\r\nexport const CSS = {\r\n  \"--board-color\": rs.getPropertyValue(\"--board-color\"),\r\n  \"--snake-color\": rs.getPropertyValue(\"--snake-color\"),\r\n  \"--tile-color\": rs.getPropertyValue(\"--tile-color\"),\r\n  \"--background\": rs.getPropertyValue(\"--background\"),\r\n  \"--food-color\": rs.getPropertyValue(\"--food-color\"),\r\n  \"--text-color\": rs.getPropertyValue(\"--text-color\"),\r\n};\r\n\r\nexport let currentTheme = {\r\n  boardColor: localStorage.getItem(\"board-theme\") || CSS[\"--board-color\"],\r\n  snakeColor: localStorage.getItem(\"snake-color\") || CSS[\"--snake-color\"],\r\n  tileColor: localStorage.getItem(\"tile-color\") || CSS[\"--tile-color\"],\r\n  foodColor: localStorage.getItem(\"food-color\") || CSS[\"--food-color\"],\r\n  background: localStorage.getItem(\"background\") || CSS[\"--background\"],\r\n};\r\n","import { root } from \"../global/CSSroot.js\";\r\n\r\nclass Preferences {\r\n  constructor(board) {\r\n    this.board = board;\r\n\r\n    root.style.setProperty(\"--board-color\", this.board.boardColor);\r\n    root.style.setProperty(\"--text-color\", this.board.textColor);\r\n    root.style.setProperty(\"--snake-color\", this.board.snakeColor);\r\n    root.style.setProperty(\"--background\", this.board.background);\r\n    root.style.setProperty(\"--food-color\", this.board.foodColor);\r\n    root.style.setProperty(\"--tile-color\", this.board.tileColor);\r\n  }\r\n\r\n  handlePickTheme = ({ theme }) => {\r\n    const {\r\n      textColor,\r\n      boardColor,\r\n      tileColor,\r\n      background,\r\n      foodColor,\r\n      snakeColor,\r\n    } = theme;\r\n\r\n    root.style.setProperty(\"--board-color\", boardColor);\r\n    root.style.setProperty(\"--text-color\", textColor);\r\n    root.style.setProperty(\"--snake-color\", snakeColor);\r\n    root.style.setProperty(\"--background\", background);\r\n    root.style.setProperty(\"--food-color\", foodColor);\r\n    root.style.setProperty(\"--tile-color\", tileColor);\r\n    localStorage.setItem(\"--board-color\", boardColor);\r\n    localStorage.setItem(\"--text-color\", textColor);\r\n    localStorage.setItem(\"--snake-color\", snakeColor);\r\n    localStorage.setItem(\"--background\", background);\r\n    localStorage.setItem(\"--food-color\", foodColor);\r\n    localStorage.setItem(\"--tile-color\", tileColor);\r\n  };\r\n\r\n  handleNystagmus = () => {\r\n    let nystagmusInterval;\r\n    let state = false;\r\n\r\n    nystagmusInterval = setInterval(() => {\r\n      state = !state;\r\n\r\n      root.style.setProperty(\"--tile-color\", `${state ? \"#fff\" : \"#000\"}`);\r\n      root.style.setProperty(\"--snake-color\", `${state ? \"#000\" : \"#fff\"}`);\r\n      root.style.setProperty(\"--food-color\", `${state ? \"#f00\" : \"#00f\"}`);\r\n    }, 50);\r\n\r\n    setTimeout(() => {\r\n      root.style.setProperty(\"--snake-color\", this.board.snakeColor);\r\n      root.style.setProperty(\"--tile-color\", this.board.tileColor);\r\n      root.style.setProperty(\"--food-color\", this.board.foodColor);\r\n      clearInterval(nystagmusInterval);\r\n    }, 4000);\r\n  };\r\n}\r\n\r\nexport default Preferences;\r\n","export default __webpack_public_path__ + \"assets/point.a41846ef811ebc769132d677a9d33a21.mp3\";","export default __webpack_public_path__ + \"assets/gameover.0242c96fc833693dc721ea75ebb2d1b4.wav\";","export default __webpack_public_path__ + \"assets/speed_acceleration.952b0801786b04a70a0133de0ce831a6.wav\";","export default __webpack_public_path__ + \"assets/jump.ae2de8e7e136703f362699ea22c8a8c5.wav\";","export default __webpack_public_path__ + \"assets/start.105e220c664c62490ce0c19c670010fc.wav\";","import POINT_SRC from \"../../assets/point.mp3\";\r\nimport GAME_OVER_SRC from \"../../assets/gameover.wav\";\r\nimport SNAKESPEED_SRC from \"../../assets/speed_acceleration.wav\";\r\nimport JUMP_SRC from \"../../assets/jump.wav\";\r\nimport START_SRC from \"../../assets/start.wav\";\r\n\r\nexport const start = new Audio();\r\nexport const jump = new Audio();\r\nexport const snakespeed = new Audio();\r\nexport const point = new Audio();\r\nexport const gameOver = new Audio();\r\nexport const bonus = new Audio();\r\n\r\nconst handleInitializeAudio = () => {\r\n  point.src = POINT_SRC;\r\n  gameOver.src = GAME_OVER_SRC;\r\n  snakespeed.src = SNAKESPEED_SRC;\r\n  jump.src = JUMP_SRC;\r\n  start.src = START_SRC;\r\n\r\n  start.volume = 0.07;\r\n  jump.volume = 0.1;\r\n  point.volue = 0.07;\r\n  snakespeed.volume = 0.3;\r\n  gameOver.volume = 0.3;\r\n  bonus.volume = 0.3;\r\n};\r\n\r\nexport default handleInitializeAudio;\r\n","const RandInt = ({ min, max }) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport default RandInt;\r\n","class Snake {\r\n  constructor(direction, length, speed, x, y, jumps = 0) {\r\n    this.direction = direction;\r\n    this.length = length;\r\n    this.speed = speed;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.jumps = jumps;\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n","import handleValidateBoardSize from \"../functions/handleValidateBoardSize.js\";\r\n\r\n// board variables\r\nexport const board = [];\r\nexport const sizeRange = { min: 10, max: 40 };\r\nexport let boardSize = handleValidateBoardSize();\r\n\r\n// classes\r\nexport let snake = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      snake.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    snake.class = payload;\r\n  },\r\n};\r\nexport let food = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      food.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    food.class = payload;\r\n  },\r\n};\r\n\r\n// checks whether the game has already started\r\nexport let gameStarted = {\r\n  val: false,\r\n  set: (value) => {\r\n    gameStarted.val = value;\r\n  },\r\n};\r\n\r\n// contains positions of all snake's tiles\r\nexport const snakePositions = [];\r\n\r\nexport let timer = {\r\n  time: 0,\r\n  increment: () => {\r\n    timer.time++;\r\n  },\r\n};\r\n\r\nexport let mute = {\r\n  isMuted: false,\r\n  toggle: () => {\r\n    mute.isMuted = !mute.isMuted;\r\n  },\r\n};\r\nexport let interval = {\r\n  val: 0,\r\n  set: (payload) => {\r\n    interval.val = payload;\r\n  },\r\n};\r\n\r\n// intervals\r\nexport let gameInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    gameInterval.interval = func;\r\n  },\r\n};\r\nexport let timerInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    timerInterval.interval = func;\r\n  },\r\n};\r\n\r\n// speed constant (used for snake intervals)\r\nexport const SPEED_CONSTANT = 4;\r\n\r\n// checks whether the snake has moved since last set direction\r\nexport let snakeDidMove = {\r\n  state: false,\r\n  set: (state) => {\r\n    snakeDidMove.state = state;\r\n  },\r\n};\r\n","import { sizeRange } from \"../global/variables.js\";\r\n\r\nconst handleValidateBoardSize = () => {\r\n  let size;\r\n\r\n  while (!size || size < sizeRange.min || size > sizeRange.max) {\r\n    const input = prompt(\r\n      `Podaj wielkość planszy (minimalna - ${sizeRange.min}, maksymalna - ${sizeRange.max}):`\r\n    );\r\n    size = parseInt(input);\r\n\r\n    if (!size || size < sizeRange.min || size > sizeRange.max) {\r\n      alert(\"Wprowadź poprawną wartość!\");\r\n    }\r\n  }\r\n\r\n  return size;\r\n};\r\n\r\nexport default handleValidateBoardSize;\r\n","export const time = document.querySelector(\"[data-parameter=time]\");\r\nexport const size = document.querySelector(\"[data-parameter=board-size]\");\r\nexport const parameterSpeed = document.querySelector(\"[data-parameter=speed]\");\r\nexport const length = document.querySelector(\"[data-parameter=length]\");\r\n\r\nexport const topBtn = document.querySelector(\"[data-direction=top]\");\r\nexport const bottomBtn = document.querySelector(\"[data-direction=bottom]\");\r\nexport const leftBtn = document.querySelector(\"[data-direction=left]\");\r\nexport const rightBtn = document.querySelector(\"[data-direction=right]\");\r\n\r\nexport const gameBoard = document.querySelector(\".gameboard\");\r\n\r\nexport const sound = document.querySelector(\".sound\");\r\n\r\nexport const controlBtns = document.querySelectorAll(\".control\");\r\n","import { length, parameterSpeed, size, time } from \"../global/elements.js\";\r\n\r\nconst handleDisplay = ({ snakeLength, speed, timer, boardSize }) => {\r\n  if (speed) parameterSpeed.textContent = `${speed}`;\r\n  if (snakeLength) length.textContent = `${snakeLength}`;\r\n  if (boardSize)\r\n    size.textContent = `Rozmiar planszy: ${boardSize}x${boardSize}`;\r\n  if (timer)\r\n    time.textContent = `Czas gry: \r\n    ${\r\n      Math.floor(timer / 60 / 60) < 10\r\n        ? \"0\" + Math.floor(timer / 60 / 60)\r\n        : Math.floor(timer / 60 / 60)\r\n    }:${\r\n      Math.floor(timer / 60) % 60 < 10\r\n        ? \"0\" + (Math.floor(timer / 60) % 60)\r\n        : Math.floor(timer / 60) % 60\r\n    }:${timer % 60 < 10 ? \"0\" + (timer % 60) : timer % 60}\r\n    `;\r\n};\r\n\r\nexport default handleDisplay;\r\n","class Boost {\r\n  constructor(x, y, name = \"\") {\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport default Boost;\r\n","import {\r\n  gameInterval,\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport { gameOver } from \"./handleInitializeAudio.js\";\r\n\r\nconst GameOver = () => {\r\n  clearInterval(timerInterval.interval);\r\n  clearInterval(gameInterval.interval);\r\n\r\n  gameStarted.val = false;\r\n\r\n  const payload = {\r\n    score: snake.class.length,\r\n    jumps: snake.class.jumps,\r\n    time: {\r\n      hours: Math.floor(timer.time / 60 / 60),\r\n      minutes: Math.floor(timer.time / 60) % 60,\r\n      seconds: timer.time % 60,\r\n    },\r\n  };\r\n\r\n  if (!mute.isMuted) gameOver.play();\r\n};\r\n\r\nexport default GameOver;\r\n","import { snake, snakePositions } from \"../global/variables.js\";\r\nimport getNewTile from \"./getNewTile.js\";\r\n\r\nconst handleFoodEaten = () => {\r\n  //TODO: adding new tiles to the end of the snake\r\n  const { x: firstX, y: firstY } = snakePositions[0];\r\n  const { x: nextX, y: nextY } = snakePositions[1]\r\n    ? snakePositions[1]\r\n    : { x: undefined, y: undefined };\r\n\r\n  if (!nextX || !nextY) {\r\n    let newTile = { x: 0, y: 0 };\r\n\r\n    switch (snake.class.direction) {\r\n      case \"W\":\r\n        newTile.x = firstX;\r\n        newTile.y = firstY + 1;\r\n        break;\r\n      case \"S\":\r\n        newTile.x = firstX;\r\n        newTile.y = firstY - 1;\r\n        break;\r\n      case \"A\":\r\n        newTile.x = firstX + 1;\r\n        newTile.y = firstY;\r\n        break;\r\n      case \"D\":\r\n        newTile.x = firstX - 1;\r\n        newTile.y = firstY;\r\n        break;\r\n    }\r\n\r\n    return { newX: newTile.x, newY: newTile.y };\r\n  }\r\n\r\n  const subX = nextX - firstX;\r\n  const subY = nextY - firstY;\r\n\r\n  return getNewTile(subX, subY, firstX, firstY);\r\n};\r\n\r\nexport default handleFoodEaten;\r\n","import { board, boardSize } from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\n\r\nconst getNewTile = (subX, subY, firstX, firstY) => {\r\n  let x = firstX;\r\n  let y = firstY;\r\n\r\n  if (subX !== 0) {\r\n    x = (firstX - subX + boardSize) % boardSize;\r\n  } else if (subY !== 0) {\r\n    y = (firstY - subY + boardSize) % boardSize;\r\n  }\r\n\r\n  if (board[y][x].classList.contains(\"tile--snake\")) {\r\n    //! game over\r\n    GameOver();\r\n    return { newX: x, newY: y };\r\n  }\r\n\r\n  return { newX: x, newY: y };\r\n};\r\n\r\nexport default getNewTile;\r\n","import { point } from \"../functions/handleInitializeAudio.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\nimport {\r\n  board,\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\nimport { length } from \"../global/elements.js\";\r\nimport handleDisplay from \"../functions/handleDisplay.js\";\r\nimport handleFoodEaten from \"../functions/handleFoodEaten.js\";\r\n\r\nclass Food extends Boost {\r\n  handleIsEaten = () => {\r\n    if (snake.class.x === this.x && snake.class.y === this.y) {\r\n      if (!mute.isMuted) {\r\n        point.play();\r\n      }\r\n\r\n      board[this.y][this.x].classList.remove(\"tile--food\");\r\n      handlePlaceTile({ mode: \"food\" });\r\n\r\n      const { newX, newY } = handleFoodEaten();\r\n\r\n      if (!gameStarted.val) return;\r\n\r\n      snake.class.length++;\r\n      handleDisplay({ snakeLength: snake.class.length });\r\n      length.style.color = \"#d1d122\";\r\n\r\n      snakePositions.unshift({ x: newX, y: newY });\r\n      board[newY][newX].classList.add(\"tile--snake\");\r\n\r\n      setTimeout(() => {\r\n        length.style.color = \"#000\";\r\n      }, 300);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Food;\r\n","export const boardThemesList = {\r\n  light: {\r\n    boardColor: \"#dbdbdb\",\r\n    tileColor: \"#efefef\",\r\n    snakeColor: \"#444444\",\r\n    foodColor: \"#c4c415\",\r\n    background: \"#fff\",\r\n    textColor: \"#000\",\r\n  },\r\n  dark: {\r\n    boardTheme: \"#000\",\r\n    tileColor: \"#202020\",\r\n    snakeColor: \"#ececec\",\r\n    foodColor: \"#120f31\",\r\n    background: \"#262222\",\r\n    textColor: \"#cecece\",\r\n  },\r\n  beige: {\r\n    boardTheme: \"#abac77\",\r\n    tileColor: \"#c7c799\",\r\n    snakeColor: \"#cec87e\",\r\n    foodColor: \"#74714e\",\r\n    background: \"#e6e6c4\",\r\n    textColor: \"#3e3e2c\",\r\n  },\r\n};\r\n\r\nlet preferences = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      preferences.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    preferences.class = payload;\r\n  },\r\n};\r\n\r\nexport default preferences;\r\n","import preferences from \"../global/preferences.js\";\r\nimport {\r\n  board,\r\n  gameStarted,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport handleFoodEaten from \"./handleFoodEaten.js\";\r\n\r\nconst handleBonus = ({ type }) => {\r\n  switch (type) {\r\n    case \"Nystagmus\":\r\n      preferences.class.handleNystagmus();\r\n      break;\r\n    case \"+5 points\":\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 5; i++) {\r\n          let { x, y } = snakePositions[i];\r\n          if (board[y][x].classList.contains(\"tile--snake-added-point\"))\r\n            board[y][x].classList.remove(\"tile--snake-added-point\");\r\n          else break;\r\n        }\r\n      }, 500);\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[0];\r\n        const nextElem = board[nextY][nextX];\r\n        if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n          nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n          nextElem.classList.remove(\"tile--snake\");\r\n          snakePositions.shift();\r\n          snake.class.length--;\r\n        } else break;\r\n      }\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const newCoordinates = handleFoodEaten();\r\n\r\n        if (!gameStarted.val) return;\r\n\r\n        if (newCoordinates) {\r\n          const { newX, newY } = newCoordinates;\r\n\r\n          snake.class.length++;\r\n          handleDisplay({ snakeLength: snake.class.length });\r\n          snakePositions.unshift({ x: newX, y: newY });\r\n          board[newY][newX].classList.add(\"tile--snake\");\r\n          board[newY][newX].classList.add(\"tile--snake-added-point\");\r\n        }\r\n      }\r\n      break;\r\n    case \"-5 points\":\r\n      setTimeout(() => {\r\n        for (let i = 0; i < 5; i++) {\r\n          const { x: nextX, y: nextY } = snakePositions[0];\r\n          const nextElem = board[nextY][nextX];\r\n          if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n            nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n            nextElem.classList.remove(\"tile--snake\");\r\n            snakePositions.shift();\r\n            snake.class.length--;\r\n            handleDisplay({ snakeLength: snake.class.length });\r\n          } else break;\r\n        }\r\n      }, 500);\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[i];\r\n\r\n        if (board[nextY][nextX].classList.contains(\"tile--snake-added-point\")) {\r\n          board[nextY][nextX].classList.remove(\"tile--snake-added-point\");\r\n          board[nextY][nextX].classList.add(\"tile--snake-subtracted-point\");\r\n        } else {\r\n          if (i === snakePositions.length - 1) break;\r\n          else\r\n            board[nextY][nextX].classList.add(\"tile--snake-subtracted-point\");\r\n        }\r\n      }\r\n      break;\r\n    default:\r\n      console.error(\"#ERR -> Nieznany typ bonusu!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleBonus;\r\n","export default __webpack_public_path__ + \"assets/SPEED2X.a0b832dac35442350bb1bb4991ad026a.png\";","export default __webpack_public_path__ + \"assets/SPEED2X.6f08f0072702c6c59080b722c5f0dc75.wav\";","export default __webpack_public_path__ + \"assets/SPEED 2Xlower.6b0fb71db10e1572f729df1326977064.png\";","export default __webpack_public_path__ + \"assets/SPEED 2Xlower.76cbfa994f82f5d79a896f2e339f2201.wav\";","export default __webpack_public_path__ + \"assets/Freeze.b1c4bc1b6fb900ad64e0c38c0c7936fc.png\";","export default __webpack_public_path__ + \"assets/Freeze.aaa39c866733aa62071d1ff78902879d.mp3\";","export default __webpack_public_path__ + \"assets/Bombs.77406599539cf7a19113ed07321eb7fd.png\";","export default __webpack_public_path__ + \"assets/bombs.529b8944e83780d8ea9f3dbbdb60897f.wav\";","export default __webpack_public_path__ + \"assets/+5 points.ce2d94cfc6b2159165532daeb96a5333.wav\";","export default __webpack_public_path__ + \"assets/-5 points.ec530168190110448115828c53954685.wav\";","export default __webpack_public_path__ + \"assets/+5 points.07303cf152a20326af798466984eb1bb.png\";","export default __webpack_public_path__ + \"assets/-5 points.870d2a49ad6d668e42239fd94a285a98.png\";","import RandInt from \"../functions/RandInt.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\n\r\nimport speed2XImg from \"../../assets/SPEED2X.png\";\r\nimport speed2XAudio from \"../../assets/SPEED2X.wav\";\r\nimport speed2XImgLower from \"../../assets/SPEED 2Xlower.png\";\r\nimport speed2XAudioLower from \"../../assets/SPEED 2Xlower.wav\";\r\nimport FreezeImg from \"../../assets/Freeze.png\";\r\nimport FreezeAudio from \"../../assets/Freeze.mp3\";\r\nimport BombsImg from \"../../assets/Bombs.png\";\r\nimport BombsWAV from \"../../assets/bombs.wav\";\r\nimport Plus5PointsWAV from \"../../assets/+5 points.wav\";\r\nimport Minus5PointsWAV from \"../../assets/-5 points.wav\";\r\nimport Plus5PointsPNG from \"../../assets/+5 points.png\";\r\nimport Minus5PointsPNG from \"../../assets/-5 points.png\";\r\nimport NystagmusPNG from \"../../assets/Nystagmus.png\";\r\nimport NystagmusWAV from \"../../assets/nystagmus.wav\";\r\n\r\nexport const bonusFiles = {\r\n  \"SPEED 2X\": {\r\n    img: speed2XImg,\r\n    audio: speed2XAudio,\r\n  },\r\n  \"SPEED /2X\": {\r\n    img: speed2XImgLower,\r\n    audio: speed2XAudioLower,\r\n  },\r\n  Freeze: {\r\n    img: FreezeImg,\r\n    audio: FreezeAudio,\r\n  },\r\n  Bombs: {\r\n    img: BombsImg,\r\n    audio: BombsWAV,\r\n  },\r\n  Nystagmus: {\r\n    img: NystagmusPNG,\r\n    audio: NystagmusWAV,\r\n  },\r\n  \"+5 points\": {\r\n    img: Plus5PointsPNG,\r\n    audio: Plus5PointsWAV,\r\n  },\r\n  \"-5 points\": {\r\n    img: Minus5PointsPNG,\r\n    audio: Minus5PointsWAV,\r\n  },\r\n};\r\n\r\nexport const bombs = [];\r\n\r\nexport const bonuses = [];\r\n\r\nexport const handleGenerateBonuses = () => {\r\n  const rand = RandInt({\r\n    min: 0,\r\n    max: 100,\r\n  });\r\n\r\n  const chosenBonuses = [\r\n    ...bonusesProbabilities.filter((bonus) => bonus.probability >= rand),\r\n  ];\r\n\r\n  for (const bonus of chosenBonuses) {\r\n    handlePlaceTile({\r\n      mode: \"bonus\",\r\n      bonus: {\r\n        name: bonus.name,\r\n        imgPATH: bonusFiles[bonus.name].img,\r\n        audioPATH: bonusFiles[bonus.name].audio,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const bonusesProbabilities = [\r\n  {\r\n    name: \"SPEED 2X\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"SPEED /2X\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Freeze\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Bombs\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Nystagmus\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"+5 points\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"-5 points\",\r\n    probability: 100,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"assets/Nystagmus.3c7308038ea90a21aa7568a94fc117d7.png\";","export default __webpack_public_path__ + \"assets/nystagmus.445799472810c8e69c180d7da2933ba0.wav\";","import RandInt from \"../functions/RandInt.js\";\r\nimport handleBonus from \"../functions/handleBonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  snake,\r\n} from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\n\r\nclass Bonus extends Boost {\r\n  constructor(x, y, name, bonusID, imgPATH, audioPATH) {\r\n    super(x, y, name);\r\n    this.bonusID = bonusID;\r\n    this.imgPATH = imgPATH;\r\n    this.audioPATH = audioPATH;\r\n\r\n    const intervalRange =\r\n      (interval.val *\r\n        RandInt({\r\n          min: 10,\r\n          max: 200,\r\n        })) /\r\n      100;\r\n\r\n    this.boostInterval = setInterval(this.handleBonusTranslate, intervalRange);\r\n  }\r\n\r\n  handleBonusTranslate = () => {\r\n    // TODO: bonus translation, check whether the bonus has reached the bottom of the board, if so - delete this bonus from bonuses using this.bonusID\r\n    if (!gameStarted.val) {\r\n      clearInterval(this.boostInterval);\r\n      return;\r\n    }\r\n    board[this.y][this.x].classList.remove(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = \"\";\r\n    this.y++;\r\n\r\n    if (this.x === snake.class.x && this.y === snake.class.y) {\r\n      clearInterval(this.boostInterval);\r\n      console.log(\"eaten -> bonus ate snake\");\r\n\r\n      const foundBonusID = bonuses.findIndex(\r\n        (bns) => bns.bonusID === this.bonusID\r\n      );\r\n\r\n      bonuses.splice(foundBonusID, 1);\r\n\r\n      handleBonus({ type: this.name });\r\n\r\n      if (!mute.isMuted) {\r\n        const bonus = new Audio();\r\n        bonus.src = this.audioPATH;\r\n        bonus.play();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.y === boardSize) {\r\n      const foundBonusID = bonuses.findIndex(\r\n        (bns) => bns.bonusID === this.bonusID\r\n      );\r\n      clearInterval(this.boostInterval);\r\n      bonuses.splice(foundBonusID, 1);\r\n      return;\r\n    }\r\n\r\n    board[this.y][this.x].classList.add(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = `url('${\r\n      bonusFiles[this.name].img\r\n    }')`;\r\n  };\r\n}\r\n\r\nexport default Bonus;\r\n","import { board, boardSize, food } from \"../global/variables.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Food from \"../classes/Food.js\";\r\nimport Bonus from \"../classes/Bonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\n\r\nconst handlePlaceTile = ({ mode, bonus }) => {\r\n  if (mode === \"bonus\") {\r\n    // do something if bonus === 'bonus'\r\n    let newBonus;\r\n    if (bonus)\r\n      newBonus = new Bonus(\r\n        0,\r\n        0,\r\n        bonus.name,\r\n        bonuses.length,\r\n        bonus.imgPATH,\r\n        bonus.audioPATH\r\n      );\r\n\r\n    const freeTiles = [];\r\n\r\n    board[0].forEach((bonus, index) => {\r\n      if (\r\n        !bonus.classList.contains(\"tile--boost\") &&\r\n        !bonus.classList.contains(\"tile--snake\")\r\n      ) {\r\n        freeTiles.push(index);\r\n      }\r\n    });\r\n\r\n    if (freeTiles.length === 0) return;\r\n\r\n    let rand = RandInt({\r\n      min: 0,\r\n      max: freeTiles.length - 1,\r\n    });\r\n\r\n    board[0][freeTiles[rand]].classList.add(\"tile--boost\");\r\n    board[0][\r\n      freeTiles[rand]\r\n    ].style.backgroundImage = `url('${newBonus.imgPATH}')`;\r\n\r\n    newBonus.x = freeTiles[rand];\r\n\r\n    bonuses.push(newBonus);\r\n\r\n    return;\r\n  }\r\n\r\n  const tiles = document.querySelectorAll(\".tile\");\r\n  const freeTiles = document.querySelectorAll(\".tile:not(.tile--snake)\");\r\n\r\n  const randTileId = RandInt({ min: 0, max: freeTiles.length - 1 });\r\n\r\n  const indexOfFreeTile = Array.from(tiles).indexOf(freeTiles[randTileId]);\r\n  const tileCoordinates = {\r\n    x: indexOfFreeTile % boardSize,\r\n    y: Math.floor(indexOfFreeTile / boardSize),\r\n  };\r\n\r\n  const { x, y } = tileCoordinates;\r\n\r\n  // mark food or bonus on the board\r\n  switch (mode) {\r\n    case \"food\":\r\n      food.class = new Food(x, y);\r\n\r\n      board[food.class.y][food.class.x].classList.add(\"tile--food\");\r\n      break;\r\n    case \"bomb\":\r\n      break;\r\n    default:\r\n      console.error(\"#ERR! -> Przesłano niepoprawny typ bonusu\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handlePlaceTile;\r\n","import handleInitializeAudio from \"./handleInitializeAudio.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Snake from \"../classes/Snake.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  bonuses,\r\n  sizeRange,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { gameBoard } from \"../global/elements.js\";\r\nimport handlePlaceTile from \"./handlePlaceTile.js\";\r\n\r\nexport const handleAppendBoard = (tileCSS) => {\r\n  let tilesQty = 0;\r\n\r\n  for (let i = 0; i < boardSize; i++) {\r\n    let row = [];\r\n    for (let j = 0; j < boardSize; j++) {\r\n      let tile = document.createElement(\"div\");\r\n\r\n      tile.classList.add(\"tile\");\r\n      tile.style.width = `${tileCSS.width - 2}px`;\r\n      tile.style.height = `${tileCSS.height - 2}px`;\r\n\r\n      gameBoard.appendChild(tile);\r\n      const tileQuery = document.querySelectorAll(\".tile\");\r\n\r\n      row.push(tileQuery[tilesQty]);\r\n\r\n      tilesQty++;\r\n    }\r\n    board.push(row);\r\n  }\r\n};\r\n\r\nexport const handleAppendSnake = () => {\r\n  for (let i = 0; i < snake.class.length; i++) {\r\n    let snakePos = {\r\n      x: snake.class.x,\r\n      y: snake.class.y + i,\r\n    };\r\n\r\n    snakePositions.unshift({ x: snakePos.x, y: snakePos.y });\r\n\r\n    let snakeEl = board[snake.class.y + i][snake.class.x];\r\n    snakeEl.classList.add(\"tile--snake\");\r\n  }\r\n};\r\n\r\nexport const getTileCSS = () => {\r\n  return {\r\n    width: gameBoard.clientWidth / boardSize,\r\n    height: gameBoard.clientHeight / boardSize,\r\n  };\r\n};\r\n\r\nconst handleGenerateBoard = () => {\r\n  handleInitializeAudio();\r\n\r\n  // TODO: generowanie planszy\r\n  let snakePos = {\r\n    x: RandInt({\r\n      min: Math.floor(boardSize / 2) - 3,\r\n      max: Math.floor(boardSize / 2) + 3,\r\n    }),\r\n    y: RandInt({\r\n      min: Math.floor(boardSize / 2) - 1,\r\n      max: Math.floor(boardSize / 2) + 1,\r\n    }),\r\n  };\r\n\r\n  snake.set({\r\n    payload: new Snake(\r\n      null,\r\n      Math.round(boardSize / 3),\r\n      1,\r\n      snakePos.x,\r\n      snakePos.y\r\n    ),\r\n  });\r\n\r\n  handleDisplay({\r\n    boardSize,\r\n    speed: snake.class.speed.toFixed(2),\r\n    snakeLength: snake.class.length,\r\n  });\r\n\r\n  let tileCSS = getTileCSS();\r\n\r\n  handleAppendBoard(tileCSS);\r\n  handleAppendSnake();\r\n\r\n  handlePlaceTile({ mode: \"food\" });\r\n};\r\n\r\nexport default handleGenerateBoard;\r\n","import {\r\n  board,\r\n  food,\r\n  gameStarted,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\nimport handleBonusIsEaten from \"./handleBonusIsEaten.js\";\r\n\r\nconst handleMoveSnake = () => {\r\n  food.class.handleIsEaten();\r\n  handleBonusIsEaten();\r\n\r\n  if (!gameStarted.val) return;\r\n\r\n  const { x, y } = snakePositions[0];\r\n\r\n  if (board[snake.class.y][snake.class.x].classList.contains(\"tile--snake\")) {\r\n    GameOver();\r\n    return;\r\n  }\r\n\r\n  const firstElem = board[y][x];\r\n\r\n  if (firstElem.classList.contains(\"tile--snake-added-point\")) {\r\n    for (let i = 0; i < snakePositions.length; i++) {\r\n      const { x: nextX, y: nextY } = snakePositions[i];\r\n      const newElem = board[nextY][nextX];\r\n\r\n      if (!newElem.classList.contains(\"tile--snake-added-point\")) {\r\n        newElem.classList.add(\"tile--snake-added-point\");\r\n        break;\r\n      }\r\n    }\r\n\r\n    firstElem.classList.remove(\"tile--snake-added-point\");\r\n  } else if (firstElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n    for (let i = 0; i < snakePositions.length; i++) {\r\n      const { x: nextX, y: nextY } = snakePositions[i];\r\n      const newElem = board[nextY][nextX];\r\n\r\n      if (!newElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n        newElem.classList.add(\"tile--snake-subtracted-point\");\r\n        break;\r\n      }\r\n    }\r\n\r\n    firstElem.classList.remove(\"tile--snake-subtracted-point\");\r\n  }\r\n\r\n  board[y][x].classList.remove(\"tile--snake\");\r\n  snakePositions.shift();\r\n  board[snake.class.y][snake.class.x].classList.add(\"tile--snake\");\r\n  snakePositions.push({ x: snake.class.x, y: snake.class.y });\r\n};\r\n\r\nexport default handleMoveSnake;\r\n","import { bonuses } from \"../global/bonuses.js\";\r\nimport { board, mute, snake } from \"../global/variables.js\";\r\nimport handleBonus from \"./handleBonus.js\";\r\n\r\nconst handleBonusIsEaten = () => {\r\n  let selectedBonus;\r\n\r\n  bonuses.map((bonus, index) => {\r\n    if (bonus.x === snake.class.x && bonus.y === snake.class.y)\r\n      selectedBonus = { bonus, index };\r\n  });\r\n\r\n  if (selectedBonus) {\r\n    const { bonus: foundBonus, index } = selectedBonus;\r\n\r\n    clearInterval(bonuses[index].boostInterval);\r\n\r\n    console.log(\"eaten -> snake ate bonus\");\r\n    const foundTile = board[foundBonus.y][foundBonus.x];\r\n\r\n    foundTile.classList.remove(\"tile--boost\");\r\n    foundTile.style.backgroundImage = \"\";\r\n\r\n    console.log(bonuses);\r\n    bonuses.splice(index, 1);\r\n    console.log(bonuses);\r\n\r\n    handleBonus({ type: foundBonus.name });\r\n\r\n    if (!mute.isMuted) {\r\n      const bonus = new Audio();\r\n      bonus.src = foundBonus.audioPATH;\r\n      bonus.play();\r\n    }\r\n  }\r\n};\r\n\r\nexport default handleBonusIsEaten;\r\n","import { bonuses, handleGenerateBonuses } from \"../global/bonuses.js\";\r\nimport { parameterSpeed } from \"../global/elements.js\";\r\nimport {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  snakeDidMove,\r\n  SPEED_CONSTANT,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { snakespeed } from \"./handleInitializeAudio.js\";\r\nimport handleUpdateSnake from \"./handleUpdateSnake.js\";\r\n\r\nconst handleIncreaseSnakeSpeed = () => {\r\n  if (snake.class.jumps % (Math.floor(boardSize / 10) * 9) === 0) {\r\n    snake.class.speed = parseFloat((snake.class.speed + 0.1).toFixed(2));\r\n\r\n    let dividedSpeed = parseFloat((snake.class.speed / 10).toFixed(3));\r\n\r\n    let speedModulo = snake.class.speed % dividedSpeed;\r\n    console.log(snake.class.speed, dividedSpeed, speedModulo);\r\n\r\n    if (\r\n      !mute.isMuted &&\r\n      (snake.class.speed < 2 ||\r\n        (snake.class.speed >= 2 &&\r\n          Math.floor(snake.class.speed % (snake.class.speed / 10)) === 0))\r\n    ) {\r\n      snakespeed.play();\r\n    }\r\n\r\n    parameterSpeed.classList.add(\"parameter-speed--acceleration\");\r\n    handleDisplay({ speed: snake.class.speed.toFixed(2) });\r\n\r\n    setTimeout(() => {\r\n      parameterSpeed.classList.remove(\"parameter-speed--acceleration\");\r\n    }, 1000);\r\n\r\n    interval.val =\r\n      750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n    clearInterval(gameInterval.interval);\r\n    gameInterval.set(setInterval(handleJump, interval.val));\r\n  }\r\n};\r\n\r\nconst handleJump = () => {\r\n  if (Math.random() < 1 && bonuses.length === 0) handleGenerateBonuses();\r\n\r\n  handleUpdateSnake();\r\n\r\n  if (!gameStarted.val) return;\r\n  \r\n  snake.class.jumps++;\r\n\r\n  // for (const bonus of bonuses) bonus.handleTransformBonus();\r\n\r\n  handleIncreaseSnakeSpeed();\r\n\r\n  snakeDidMove.set(true);\r\n};\r\n\r\nexport default handleJump;\r\n","import { boardSize, snake } from \"../global/variables.js\";\r\nimport handleMoveSnake from \"./handleMoveSnake.js\";\r\n\r\nconst handleUpdateSnake = () => {\r\n  switch (snake.class.direction) {\r\n    case \"W\":\r\n      snake.class.y = snake.class.y === 0 ? boardSize - 1 : snake.class.y - 1;\r\n      handleMoveSnake();\r\n      break;\r\n    case \"S\":\r\n      snake.class.y = snake.class.y === boardSize - 1 ? 0 : snake.class.y + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"A\":\r\n      snake.class.x = snake.class.x === 0 ? boardSize - 1 : snake.class.x - 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"D\":\r\n      snake.class.x = snake.class.x === boardSize - 1 ? 0 : snake.class.x + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    default:\r\n      console.error(\"#ERR: Nieprawidłowy kierunek!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleUpdateSnake;\r\n","import { sound } from \"../global/elements.js\";\r\nimport {\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakeDidMove,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleStartGame from \"./handleStartGame.js\";\r\n\r\nconst handleKeyPress = ({ key }) => {\r\n  if (key === \"M\") {\r\n    mute.isMuted = !mute.isMuted;\r\n    sound.classList.toggle(\"sound--muted\");\r\n    return;\r\n  }\r\n\r\n  if (\r\n    (key === \"W\" && snake.class.direction === \"S\") ||\r\n    (key === \"S\" && snake.class.direction === \"W\") ||\r\n    (key === \"A\" && snake.class.direction === \"D\") ||\r\n    (key === \"D\" && snake.class.direction === \"A\")\r\n  )\r\n    return;\r\n\r\n  if (!gameStarted.val && snake.class.jumps === 0) {\r\n    if (key === \"S\") {\r\n      snakePositions.reverse();\r\n      snake.set({\r\n        attr: \"y\",\r\n        payload: snakePositions[snakePositions.length - 1].y,\r\n      });\r\n    }\r\n\r\n    snake.class.direction = key;\r\n\r\n    handleStartGame();\r\n  }\r\n\r\n  if (gameStarted.val && snakeDidMove.state) {\r\n    snakeDidMove.set(false);\r\n    snake.class.direction = key;\r\n  }\r\n};\r\n\r\nexport default handleKeyPress;\r\n","import {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  SPEED_CONSTANT,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { jump, start } from \"./handleInitializeAudio.js\";\r\nimport handleJump from \"./handleJump.js\";\r\n\r\nconst handleStartGame = () => {\r\n  gameStarted.val = true;\r\n\r\n  if (!mute.isMuted) {\r\n    start.play();\r\n  }\r\n\r\n  interval.val =\r\n    750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n  gameInterval.set(setInterval(handleJump, interval.val));\r\n\r\n  timerInterval.set(\r\n    setInterval(() => {\r\n      if (!mute.isMuted) {\r\n        jump.play();\r\n      }\r\n\r\n      timer.time++;\r\n      handleDisplay({ timer: timer.time });\r\n    }, 1000)\r\n  );\r\n};\r\n\r\nexport default handleStartGame;\r\n","import Preferences from \"./script/classes/Preferences.js\";\r\nimport handleGenerateBoard from \"./script/functions/handleGenerateBoard.js\";\r\nimport handleKeyPress from \"./script/functions/handleKeyPress.js\";\r\nimport { currentTheme } from \"./script/global/CSSroot.js\";\r\nimport { controlBtns, sound } from \"./script/global/elements.js\";\r\nimport {\r\n  W,\r\n  A,\r\n  S,\r\n  D,\r\n  M,\r\n  topKey,\r\n  bottomKey,\r\n  leftKey,\r\n  rightKey,\r\n} from \"./script/global/keys.js\";\r\nimport preferences from \"./script/global/preferences.js\";\r\nimport { mute } from \"./script/global/variables.js\";\r\nimport \"./style.css\";\r\n\r\nsound.addEventListener(\"click\", () => {\r\n  mute.isMuted = !mute.isMuted;\r\n  sound.classList.toggle(\"sound--muted\");\r\n});\r\n\r\ncontrolBtns.forEach((control, index) => {\r\n  control.addEventListener(\"touchstart\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"touchend\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n\r\n  control.addEventListener(\"mousedown\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"mouseup\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n});\r\n\r\nlet key;\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      controlBtns[0].classList.add(\"control--pressed\");\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      controlBtns[1].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      controlBtns[2].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      controlBtns[3].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (e) => {\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  controlBtns.forEach((control) =>\r\n    control.classList.remove(\"control--pressed\")\r\n  );\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      key = \"W\";\r\n\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      key = \"S\";\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      key = \"A\";\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      key = \"D\";\r\n\r\n      break;\r\n    case M:\r\n      key = \"M\";\r\n\r\n      break;\r\n\r\n    default:\r\n      return;\r\n      break;\r\n  }\r\n\r\n  handleKeyPress({ key });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  preferences.set({\r\n    payload: new Preferences({\r\n      boardColor: currentTheme.boardColor,\r\n      textColor: currentTheme.textColor,\r\n      tileColor: currentTheme.tileColor,\r\n      foodColor: currentTheme.foodColor,\r\n      background: currentTheme.background,\r\n      snakeColor: currentTheme.snakeColor,\r\n    }),\r\n  });\r\n  handleGenerateBoard();\r\n});\r\n","export const W = 87;\r\nexport const A = 65;\r\nexport const S = 83;\r\nexport const D = 68;\r\nexport const M = 77;\r\n\r\nexport const topKey = 38;\r\nexport const bottomKey = 40;\r\nexport const leftKey = 37;\r\nexport const rightKey = 39;\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","root","querySelector","rs","getComputedStyle","CSS","getPropertyValue","currentTheme","boardColor","localStorage","getItem","snakeColor","tileColor","foodColor","background","constructor","board","style","setProperty","textColor","handlePickTheme","theme","setItem","handleNystagmus","nystagmusInterval","state","setInterval","setTimeout","clearInterval","Audio","snakespeed","gameOver","bonus","min","max","Math","ceil","floor","random","direction","speed","x","y","jumps","sizeRange","boardSize","size","input","prompt","parseInt","alert","snake","class","set","payload","attr","food","gameStarted","val","value","snakePositions","timer","time","increment","mute","isMuted","toggle","interval","gameInterval","func","timerInterval","snakeDidMove","parameterSpeed","gameBoard","sound","controlBtns","querySelectorAll","snakeLength","textContent","name","play","firstX","firstY","nextX","nextY","undefined","newTile","newX","newY","subX","subY","classList","contains","handleIsEaten","remove","mode","unshift","add","preferences","type","i","nextElem","shift","newCoordinates","console","error","bonusFiles","img","audio","Freeze","Bombs","Nystagmus","bonuses","bonusesProbabilities","probability","bonusID","imgPATH","audioPATH","super","intervalRange","boostInterval","handleBonusTranslate","backgroundImage","foundBonusID","findIndex","bns","splice","log","newBonus","freeTiles","forEach","index","push","rand","tiles","randTileId","indexOfFreeTile","Array","from","indexOf","tileCoordinates","volume","volue","snakePos","round","tileCSS","tilesQty","row","j","tile","createElement","width","height","appendChild","tileQuery","handleAppendBoard","clientWidth","clientHeight","handleAppendSnake","selectedBonus","map","foundBonus","foundTile","firstElem","newElem","handleJump","chosenBonuses","filter","handleGenerateBonuses","parseFloat","toFixed","dividedSpeed","speedModulo","handleIncreaseSnakeSpeed","key","reverse","addEventListener","control","keyCode","keyIdentifier"],"sourceRoot":""}