{"version":3,"file":"bundle.1c0cdd527a0ed7fe72c9.js","mappings":"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","sources":["webpack://snakejs/webpack/bootstrap","webpack://snakejs/webpack/runtime/global","webpack://snakejs/webpack/runtime/publicPath","webpack://snakejs/./src/script/global/CSSroot.js","webpack://snakejs/./src/script/classes/Preferences.js","webpack://snakejs/./src/assets/point.mp3","webpack://snakejs/./src/assets/gameover.wav","webpack://snakejs/./src/assets/speed_acceleration.wav","webpack://snakejs/./src/assets/jump.wav","webpack://snakejs/./src/assets/start.wav","webpack://snakejs/./src/script/functions/RandInt.js","webpack://snakejs/./src/script/global/variables.js","webpack://snakejs/./src/script/functions/handleValidateBoardSize.js","webpack://snakejs/./src/script/classes/Boost.js","webpack://snakejs/./src/script/global/elements.js","webpack://snakejs/./src/script/functions/handleDisplay.js","webpack://snakejs/./src/script/functions/GameOver.js","webpack://snakejs/./src/script/functions/handleFoodEaten.js","webpack://snakejs/./src/script/functions/getNewTile.js","webpack://snakejs/./src/script/classes/Food.js","webpack://snakejs/./src/script/global/preferences.js","webpack://snakejs/./src/script/global/bombs.js","webpack://snakejs/./src/script/functions/handleBonus.js","webpack://snakejs/./src/script/classes/Bonus.js","webpack://snakejs/./src/script/classes/Bomb.js","webpack://snakejs/./src/script/functions/handlePlaceTile.js","webpack://snakejs/./src/assets/SPEED2X.png","webpack://snakejs/./src/assets/SPEED2X.wav","webpack://snakejs/./src/assets/SPEED 2Xlower.png","webpack://snakejs/./src/assets/SPEED 2Xlower.wav","webpack://snakejs/./src/assets/Freeze.png","webpack://snakejs/./src/assets/Freeze.mp3","webpack://snakejs/./src/assets/Bombs.png","webpack://snakejs/./src/assets/bombs.wav","webpack://snakejs/./src/assets/+5 points.wav","webpack://snakejs/./src/assets/-5 points.wav","webpack://snakejs/./src/assets/+5 points.png","webpack://snakejs/./src/assets/-5 points.png","webpack://snakejs/./src/script/global/bonuses.js","webpack://snakejs/./src/assets/Nystagmus.png","webpack://snakejs/./src/assets/nystagmus.wav","webpack://snakejs/./src/script/functions/handleInitializeAudio.js","webpack://snakejs/./src/script/classes/Snake.js","webpack://snakejs/./src/script/functions/handleGenerateBoard.js","webpack://snakejs/./src/script/functions/handleMoveSnake.js","webpack://snakejs/./src/script/functions/handleBonusIsEaten.js","webpack://snakejs/./src/script/functions/handleJump.js","webpack://snakejs/./src/script/functions/handleUpdateSnake.js","webpack://snakejs/./src/script/functions/handleKeyPress.js","webpack://snakejs/./src/script/functions/handleStartGame.js","webpack://snakejs/./src/script.js","webpack://snakejs/./src/script/global/keys.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const root = document.querySelector(\":root\");\r\nexport const rs = getComputedStyle(root);\r\n\r\nexport const CSS = {\r\n  \"--board-color\": rs.getPropertyValue(\"--board-color\"),\r\n  \"--snake-color\": rs.getPropertyValue(\"--snake-color\"),\r\n  \"--tile-color\": rs.getPropertyValue(\"--tile-color\"),\r\n  \"--background\": rs.getPropertyValue(\"--background\"),\r\n  \"--food-color\": rs.getPropertyValue(\"--food-color\"),\r\n  \"--text-color\": rs.getPropertyValue(\"--text-color\"),\r\n};\r\n\r\nexport let currentTheme = {\r\n  boardColor: localStorage.getItem(\"board-theme\") || CSS[\"--board-color\"],\r\n  snakeColor: localStorage.getItem(\"snake-color\") || CSS[\"--snake-color\"],\r\n  tileColor: localStorage.getItem(\"tile-color\") || CSS[\"--tile-color\"],\r\n  foodColor: localStorage.getItem(\"food-color\") || CSS[\"--food-color\"],\r\n  background: localStorage.getItem(\"background\") || CSS[\"--background\"],\r\n};\r\n","import { root } from \"../global/CSSroot.js\";\r\n\r\nclass Preferences {\r\n  constructor(board) {\r\n    this.board = board;\r\n\r\n    root.style.setProperty(\"--board-color\", this.board.boardColor);\r\n    root.style.setProperty(\"--text-color\", this.board.textColor);\r\n    root.style.setProperty(\"--snake-color\", this.board.snakeColor);\r\n    root.style.setProperty(\"--background\", this.board.background);\r\n    root.style.setProperty(\"--food-color\", this.board.foodColor);\r\n    root.style.setProperty(\"--tile-color\", this.board.tileColor);\r\n  }\r\n\r\n  handlePickTheme = ({ theme }) => {\r\n    const {\r\n      textColor,\r\n      boardColor,\r\n      tileColor,\r\n      background,\r\n      foodColor,\r\n      snakeColor,\r\n    } = theme;\r\n\r\n    root.style.setProperty(\"--board-color\", boardColor);\r\n    root.style.setProperty(\"--text-color\", textColor);\r\n    root.style.setProperty(\"--snake-color\", snakeColor);\r\n    root.style.setProperty(\"--background\", background);\r\n    root.style.setProperty(\"--food-color\", foodColor);\r\n    root.style.setProperty(\"--tile-color\", tileColor);\r\n    localStorage.setItem(\"--board-color\", boardColor);\r\n    localStorage.setItem(\"--text-color\", textColor);\r\n    localStorage.setItem(\"--snake-color\", snakeColor);\r\n    localStorage.setItem(\"--background\", background);\r\n    localStorage.setItem(\"--food-color\", foodColor);\r\n    localStorage.setItem(\"--tile-color\", tileColor);\r\n  };\r\n\r\n  handleNystagmus = () => {\r\n    let nystagmusInterval;\r\n    let state = false;\r\n\r\n    nystagmusInterval = setInterval(() => {\r\n      state = !state;\r\n\r\n      root.style.setProperty(\"--tile-color\", `${state ? \"#fff\" : \"#000\"}`);\r\n      root.style.setProperty(\"--snake-color\", `${state ? \"#000\" : \"#fff\"}`);\r\n      root.style.setProperty(\"--food-color\", `${state ? \"#f00\" : \"#00f\"}`);\r\n    }, 50);\r\n\r\n    setTimeout(() => {\r\n      root.style.setProperty(\"--snake-color\", this.board.snakeColor);\r\n      root.style.setProperty(\"--tile-color\", this.board.tileColor);\r\n      root.style.setProperty(\"--food-color\", this.board.foodColor);\r\n      clearInterval(nystagmusInterval);\r\n    }, 4000);\r\n  };\r\n}\r\n\r\nexport default Preferences;\r\n","export default __webpack_public_path__ + \"assets/point.a41846ef811ebc769132d677a9d33a21.mp3\";","export default __webpack_public_path__ + \"assets/gameover.0242c96fc833693dc721ea75ebb2d1b4.wav\";","export default __webpack_public_path__ + \"assets/speed_acceleration.952b0801786b04a70a0133de0ce831a6.wav\";","export default __webpack_public_path__ + \"assets/jump.ae2de8e7e136703f362699ea22c8a8c5.wav\";","export default __webpack_public_path__ + \"assets/start.105e220c664c62490ce0c19c670010fc.wav\";","const RandInt = ({ min, max }) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport default RandInt;\r\n","import handleValidateBoardSize from \"../functions/handleValidateBoardSize.js\";\r\n\r\n// board variables\r\nexport const board = [];\r\nexport const sizeRange = { min: 10, max: 40 };\r\nexport let boardSize = handleValidateBoardSize();\r\n\r\n// classes\r\nexport let snake = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      snake.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    snake.class = payload;\r\n  },\r\n};\r\nexport let food = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      food.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    food.class = payload;\r\n  },\r\n};\r\n\r\n// checks whether the game has already started\r\nexport let gameStarted = {\r\n  val: false,\r\n  set: (value) => {\r\n    gameStarted.val = value;\r\n  },\r\n};\r\n\r\n// contains positions of all snake's tiles\r\nexport const snakePositions = [];\r\n\r\nexport let timer = {\r\n  time: 0,\r\n  increment: () => {\r\n    timer.time++;\r\n  },\r\n};\r\n\r\nexport let mute = {\r\n  isMuted: false,\r\n  toggle: () => {\r\n    mute.isMuted = !mute.isMuted;\r\n  },\r\n};\r\nexport let interval = {\r\n  val: 0,\r\n  set: (payload) => {\r\n    interval.val = payload;\r\n  },\r\n};\r\n\r\n// intervals\r\nexport let gameInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    gameInterval.interval = func;\r\n  },\r\n};\r\nexport let timerInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    timerInterval.interval = func;\r\n  },\r\n};\r\n\r\n// speed constant (used for snake intervals)\r\nexport const SPEED_CONSTANT = 4;\r\n\r\n// checks whether the snake has moved since last set direction\r\nexport let snakeDidMove = {\r\n  state: false,\r\n  set: (state) => {\r\n    snakeDidMove.state = state;\r\n  },\r\n};\r\n","import { sizeRange } from \"../global/variables.js\";\r\n\r\nconst handleValidateBoardSize = () => {\r\n  let size;\r\n\r\n  while (!size || size < sizeRange.min || size > sizeRange.max) {\r\n    const input = prompt(\r\n      `Podaj wielkość planszy (minimalna - ${sizeRange.min}, maksymalna - ${sizeRange.max}):`\r\n    );\r\n    size = parseInt(input);\r\n\r\n    if (!size || size < sizeRange.min || size > sizeRange.max) {\r\n      alert(\"Wprowadź poprawną wartość!\");\r\n    }\r\n  }\r\n\r\n  return size;\r\n};\r\n\r\nexport default handleValidateBoardSize;\r\n","class Boost {\r\n  constructor(x, y, name = \"\") {\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport default Boost;\r\n","export const time = document.querySelector(\"[data-parameter=time]\");\r\nexport const size = document.querySelector(\"[data-parameter=board-size]\");\r\nexport const parameterSpeed = document.querySelector(\"[data-parameter=speed]\");\r\nexport const length = document.querySelector(\"[data-parameter=length]\");\r\n\r\nexport const topBtn = document.querySelector(\"[data-direction=top]\");\r\nexport const bottomBtn = document.querySelector(\"[data-direction=bottom]\");\r\nexport const leftBtn = document.querySelector(\"[data-direction=left]\");\r\nexport const rightBtn = document.querySelector(\"[data-direction=right]\");\r\n\r\nexport const gameBoard = document.querySelector(\".gameboard\");\r\n\r\nexport const sound = document.querySelector(\".sound\");\r\n\r\nexport const controlBtns = document.querySelectorAll(\".control\");\r\n","import { length, parameterSpeed, size, time } from \"../global/elements.js\";\r\n\r\nconst handleDisplay = ({ snakeLength, speed, timer, boardSize }) => {\r\n  if (speed) parameterSpeed.textContent = `${speed}`;\r\n  if (snakeLength) length.textContent = `${snakeLength}`;\r\n  if (boardSize)\r\n    size.textContent = `Rozmiar planszy: ${boardSize}x${boardSize}`;\r\n  if (timer)\r\n    time.textContent = `Czas gry: \r\n    ${\r\n      Math.floor(timer / 60 / 60) < 10\r\n        ? \"0\" + Math.floor(timer / 60 / 60)\r\n        : Math.floor(timer / 60 / 60)\r\n    }:${\r\n      Math.floor(timer / 60) % 60 < 10\r\n        ? \"0\" + (Math.floor(timer / 60) % 60)\r\n        : Math.floor(timer / 60) % 60\r\n    }:${timer % 60 < 10 ? \"0\" + (timer % 60) : timer % 60}\r\n    `;\r\n};\r\n\r\nexport default handleDisplay;\r\n","import {\r\n  gameInterval,\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport { gameOver } from \"./handleInitializeAudio.js\";\r\n\r\nconst GameOver = () => {\r\n  clearInterval(timerInterval.interval);\r\n  clearInterval(gameInterval.interval);\r\n\r\n  gameStarted.val = false;\r\n\r\n  const payload = {\r\n    score: snake.class.length,\r\n    jumps: snake.class.jumps,\r\n    time: {\r\n      hours: Math.floor(timer.time / 60 / 60),\r\n      minutes: Math.floor(timer.time / 60) % 60,\r\n      seconds: timer.time % 60,\r\n    },\r\n  };\r\n\r\n  setTimeout(() => {\r\n    navigator.vibrate([200, 100, 300]);\r\n  }, 150);\r\n\r\n  if (!mute.isMuted) gameOver.play();\r\n};\r\n\r\nexport default GameOver;\r\n","import { snake, snakePositions } from \"../global/variables.js\";\r\nimport getNewTile from \"./getNewTile.js\";\r\n\r\nconst handleFoodEaten = () => {\r\n  //TODO: adding new tiles to the end of the snake\r\n  const { x: firstX, y: firstY } = snakePositions[0];\r\n  const { x: nextX, y: nextY } = snakePositions[1]\r\n    ? snakePositions[1]\r\n    : { x: undefined, y: undefined };\r\n\r\n  if (!nextX || !nextY) {\r\n    let newTile = { x: 0, y: 0 };\r\n\r\n    switch (snake.class.direction) {\r\n      case \"W\":\r\n        newTile.x = firstX;\r\n        newTile.y = firstY + 1;\r\n        break;\r\n      case \"S\":\r\n        newTile.x = firstX;\r\n        newTile.y = firstY - 1;\r\n        break;\r\n      case \"A\":\r\n        newTile.x = firstX + 1;\r\n        newTile.y = firstY;\r\n        break;\r\n      case \"D\":\r\n        newTile.x = firstX - 1;\r\n        newTile.y = firstY;\r\n        break;\r\n    }\r\n\r\n    return { newX: newTile.x, newY: newTile.y };\r\n  }\r\n\r\n  const subX = nextX - firstX;\r\n  const subY = nextY - firstY;\r\n\r\n  return getNewTile(subX, subY, firstX, firstY);\r\n};\r\n\r\nexport default handleFoodEaten;\r\n","import { board, boardSize } from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\n\r\nconst getNewTile = (subX, subY, firstX, firstY) => {\r\n  let x = firstX;\r\n  let y = firstY;\r\n\r\n  if (subX !== 0) {\r\n    x = (firstX - subX + boardSize) % boardSize;\r\n  } else if (subY !== 0) {\r\n    y = (firstY - subY + boardSize) % boardSize;\r\n  }\r\n\r\n  if (board[y][x].classList.contains(\"tile--snake\")) {\r\n    //! game over\r\n    GameOver();\r\n    return { newX: x, newY: y };\r\n  }\r\n\r\n  return { newX: x, newY: y };\r\n};\r\n\r\nexport default getNewTile;\r\n","import { point } from \"../functions/handleInitializeAudio.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\nimport {\r\n  board,\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\nimport { length } from \"../global/elements.js\";\r\nimport handleDisplay from \"../functions/handleDisplay.js\";\r\nimport handleFoodEaten from \"../functions/handleFoodEaten.js\";\r\n\r\nclass Food extends Boost {\r\n  handleIsEaten = () => {\r\n    if (snake.class.x === this.x && snake.class.y === this.y) {\r\n      if (!mute.isMuted) {\r\n        point.play();\r\n      }\r\n\r\n      board[this.y][this.x].classList.remove(\"tile--food\");\r\n      handlePlaceTile({ mode: \"food\" });\r\n\r\n      const { newX, newY } = handleFoodEaten();\r\n\r\n      if (!gameStarted.val) return;\r\n\r\n      let snakePosLen = snakePositions.length;\r\n\r\n      const { x: firstX, y: firstY } = snakePositions[0];\r\n      const firstElem = board[firstY][firstX];\r\n\r\n      if (firstElem.classList.contains(\"tile--snake-added-point\")) {\r\n        // remove added points\r\n\r\n        for (let i = 0; i < snakePosLen; i++) {\r\n          const { x: nextX, y: nextY } = snakePositions[i];\r\n          const nextElem = board[nextY][nextX];\r\n\r\n          nextElem.classList.remove(\"tile--snake-added-point\");\r\n        }\r\n      } else if (firstElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n        // remove subtracted points\r\n\r\n        for (let i = 0; i < snakePosLen; i++) {\r\n          const { x: nextX, y: nextY } = snakePositions[0];\r\n          const nextElem = board[nextY][nextX];\r\n\r\n          if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n            nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n            nextElem.classList.remove(\"tile--snake\");\r\n            snakePositions.shift();\r\n            snake.class.length--;\r\n          } else break;\r\n        }\r\n      }\r\n\r\n      snake.class.length++;\r\n      handleDisplay({ snakeLength: snake.class.length });\r\n      length.style.color = \"#d1d122\";\r\n\r\n      snakePositions.unshift({ x: newX, y: newY });\r\n      board[newY][newX].classList.add(\"tile--snake\");\r\n\r\n      setTimeout(() => {\r\n        length.style.color = \"#000\";\r\n      }, 300);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Food;\r\n","export const boardThemesList = {\r\n  light: {\r\n    boardColor: \"#dbdbdb\",\r\n    tileColor: \"#efefef\",\r\n    snakeColor: \"#444444\",\r\n    foodColor: \"#c4c415\",\r\n    background: \"#fff\",\r\n    textColor: \"#000\",\r\n  },\r\n  dark: {\r\n    boardTheme: \"#000\",\r\n    tileColor: \"#202020\",\r\n    snakeColor: \"#ececec\",\r\n    foodColor: \"#120f31\",\r\n    background: \"#262222\",\r\n    textColor: \"#cecece\",\r\n  },\r\n  beige: {\r\n    boardTheme: \"#abac77\",\r\n    tileColor: \"#c7c799\",\r\n    snakeColor: \"#cec87e\",\r\n    foodColor: \"#74714e\",\r\n    background: \"#e6e6c4\",\r\n    textColor: \"#3e3e2c\",\r\n  },\r\n};\r\n\r\nlet preferences = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      preferences.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    preferences.class = payload;\r\n  },\r\n};\r\n\r\nexport default preferences;\r\n","export const bombs = [];\r\n\r\nexport let bombsState = {\r\n  state: true,\r\n  toggle: () => {\r\n    bombsState.state = !bombsState.state;\r\n  },\r\n};\r\n\r\nexport let bombsInterval = {\r\n  val: \"\",\r\n  set: ({ payload }) => {\r\n    bombsInterval.val = payload;\r\n  },\r\n};\r\n","import { root } from \"../global/CSSroot.js\";\r\nimport preferences from \"../global/preferences.js\";\r\nimport {\r\n  board,\r\n  gameStarted,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport handleFoodEaten from \"./handleFoodEaten.js\";\r\nimport handlePlaceTile from \"./handlePlaceTile.js\";\r\nimport { bombsInterval, bombsState } from \"../global/bombs.js\";\r\n\r\nconst handleBonus = ({ type }) => {\r\n  let snakePosLen;\r\n\r\n  switch (type) {\r\n    case \"Nystagmus\":\r\n      preferences.class.handleNystagmus();\r\n      break;\r\n    case \"+5 points\":\r\n      setTimeout(() => {\r\n        let snakePosLen = snakePositions.length;\r\n        for (let i = 0; i < snakePosLen; i++) {\r\n          let { x, y } = snakePositions[i];\r\n          if (board[y][x].classList.contains(\"tile--snake-added-point\"))\r\n            board[y][x].classList.remove(\"tile--snake-added-point\");\r\n          else break;\r\n        }\r\n      }, 500);\r\n\r\n      snakePosLen = snakePositions.length;\r\n\r\n      for (let i = 0; i < snakePosLen; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[0];\r\n        const nextElem = board[nextY][nextX];\r\n        if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n          nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n          nextElem.classList.remove(\"tile--snake\");\r\n          snakePositions.shift();\r\n          snake.class.length--;\r\n        } else break;\r\n      }\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const newCoordinates = handleFoodEaten();\r\n\r\n        if (!gameStarted.val) return;\r\n\r\n        if (newCoordinates) {\r\n          const { newX, newY } = newCoordinates;\r\n\r\n          snake.class.length++;\r\n          handleDisplay({ snakeLength: snake.class.length });\r\n          snakePositions.unshift({ x: newX, y: newY });\r\n          board[newY][newX].classList.add(\"tile--snake\");\r\n          board[newY][newX].classList.add(\"tile--snake-added-point\");\r\n        }\r\n      }\r\n      break;\r\n    case \"-5 points\":\r\n      setTimeout(() => {\r\n        let snakePosLen = snakePositions.length;\r\n        for (let i = 0; i < snakePosLen; i++) {\r\n          const { x: nextX, y: nextY } = snakePositions[0];\r\n          const nextElem = board[nextY][nextX];\r\n          if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n            nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n            nextElem.classList.remove(\"tile--snake\");\r\n            snakePositions.shift();\r\n            snake.class.length--;\r\n            handleDisplay({ snakeLength: snake.class.length });\r\n          } else break;\r\n        }\r\n      }, 500);\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[i];\r\n\r\n        if (board[nextY][nextX].classList.contains(\"tile--snake-added-point\")) {\r\n          board[nextY][nextX].classList.remove(\"tile--snake-added-point\");\r\n          board[nextY][nextX].classList.add(\"tile--snake-subtracted-point\");\r\n        } else {\r\n          if (i === snakePositions.length - 1) break;\r\n          else\r\n            board[nextY][nextX].classList.add(\"tile--snake-subtracted-point\");\r\n        }\r\n      }\r\n      break;\r\n    case \"Bombs\":\r\n      bombsInterval.set({\r\n        payload: setInterval(() => {\r\n          bombsState.toggle();\r\n\r\n          root.style.setProperty(\r\n            \"--bomb-color\",\r\n            bombsState.state ? \"#000\" : \"#f00\"\r\n          );\r\n        }, 250),\r\n      });\r\n      for (let i = 0; i < 8; i++) {\r\n        handlePlaceTile({ mode: \"bomb\" });\r\n      }\r\n      break;\r\n    default:\r\n      console.error(\"#ERR -> Nieznany typ bonusu!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleBonus;\r\n","import RandInt from \"../functions/RandInt.js\";\r\nimport handleBonus from \"../functions/handleBonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  snake,\r\n} from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\n\r\nclass Bonus extends Boost {\r\n  constructor(x, y, name, bonusID, imgPATH, audioPATH) {\r\n    super(x, y, name);\r\n    this.bonusID = bonusID;\r\n    this.imgPATH = imgPATH;\r\n    this.audioPATH = audioPATH;\r\n\r\n    const intervalRange =\r\n      (interval.val *\r\n        RandInt({\r\n          min: 10,\r\n          max: 200,\r\n        })) /\r\n      100;\r\n\r\n    this.boostInterval = setInterval(this.handleBonusTranslate, intervalRange);\r\n  }\r\n\r\n  handleBonusTranslate = () => {\r\n    // TODO: bonus translation, check whether the bonus has reached the bottom of the board, if so - delete this bonus from bonuses using this.bonusID\r\n    if (!gameStarted.val) {\r\n      clearInterval(this.boostInterval);\r\n      return;\r\n    }\r\n    board[this.y][this.x].classList.remove(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = \"\";\r\n    this.y++;\r\n\r\n    if (this.x === snake.class.x && this.y === snake.class.y) {\r\n      clearInterval(this.boostInterval);\r\n      console.log(\"eaten -> bonus ate snake\");\r\n\r\n      const foundBonusID = bonuses.findIndex(\r\n        (bns) => bns.bonusID === this.bonusID\r\n      );\r\n\r\n      bonuses.splice(foundBonusID, 1);\r\n\r\n      handleBonus({ type: this.name });\r\n\r\n      if (!mute.isMuted) {\r\n        const bonus = new Audio();\r\n        bonus.src = this.audioPATH;\r\n        bonus.play();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.y === boardSize) {\r\n      const foundBonusID = bonuses.findIndex(\r\n        (bns) => bns.bonusID === this.bonusID\r\n      );\r\n      clearInterval(this.boostInterval);\r\n      bonuses.splice(foundBonusID, 1);\r\n      return;\r\n    }\r\n\r\n    board[this.y][this.x].classList.add(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = `url('${\r\n      bonusFiles[this.name].img\r\n    }')`;\r\n  };\r\n}\r\n\r\nexport default Bonus;\r\n","import GameOver from \"../functions/GameOver.js\";\r\nimport RandInt from \"../functions/RandInt.js\";\r\nimport { bomb } from \"../functions/handleInitializeAudio.js\";\r\nimport { bombsInterval } from \"../global/bombs.js\";\r\nimport { bombs } from \"../global/bonuses.js\";\r\nimport { board, gameStarted, mute, snake } from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\n\r\nclass Bomb extends Boost {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this.bombId = bombs.length;\r\n\r\n    bombs.push(this);\r\n\r\n    const BOMB_INTERVAL_RANGE = RandInt({\r\n      min: 50,\r\n      max: 250,\r\n    });\r\n\r\n    this.bombInterval = setInterval(\r\n      this.handleBombTranslate,\r\n      BOMB_INTERVAL_RANGE\r\n    );\r\n  }\r\n\r\n  handleBombTranslate = () => {\r\n    if (!gameStarted.val) {\r\n      clearInterval(this.bombInterval);\r\n      return;\r\n    }\r\n    board[this.y][this.x].classList.remove(\"tile--bomb\");\r\n\r\n    if (this.x === 0) {\r\n      clearInterval(this.bombInterval);\r\n\r\n      bombs.splice(this.bombId, 1);\r\n\r\n      if (bombs.length === 0) clearInterval(bombsInterval.val);\r\n\r\n      return;\r\n    }\r\n\r\n    this.x--;\r\n\r\n    board[this.y][this.x].classList.add(\"tile--bomb\");\r\n    this.handleBombCollide();\r\n  };\r\n\r\n  handleBombCollide = () => {\r\n    if (this.x === snake.class.x && this.y === snake.class.y) {\r\n      if (!mute.isMuted) bomb.play();\r\n\r\n      bombs.splice(this.bombId, 1);\r\n\r\n      if (bombs.length === 0) clearInterval(bombsInterval.val);\r\n\r\n      GameOver();\r\n    }\r\n  };\r\n}\r\n\r\nexport default Bomb;\r\n","import { board, boardSize, food } from \"../global/variables.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Food from \"../classes/Food.js\";\r\nimport Bonus from \"../classes/Bonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport Bomb from \"../classes/Bomb.js\";\r\n\r\nconst handlePlaceTile = ({ mode, bonus }) => {\r\n  if (mode === \"bonus\") {\r\n    // do something if bonus === 'bonus'\r\n    let newBonus;\r\n    if (bonus)\r\n      newBonus = new Bonus(\r\n        0,\r\n        0,\r\n        bonus.name,\r\n        bonuses.length,\r\n        bonus.imgPATH,\r\n        bonus.audioPATH\r\n      );\r\n\r\n    const freeTiles = [];\r\n\r\n    board[0].forEach((bonus, index) => {\r\n      if (\r\n        !bonus.classList.contains(\"tile--boost\") &&\r\n        !bonus.classList.contains(\"tile--snake\")\r\n      ) {\r\n        freeTiles.push(index);\r\n      }\r\n    });\r\n\r\n    if (freeTiles.length === 0) return;\r\n\r\n    let rand = RandInt({\r\n      min: 0,\r\n      max: freeTiles.length - 1,\r\n    });\r\n\r\n    board[0][freeTiles[rand]].classList.add(\"tile--boost\");\r\n    board[0][\r\n      freeTiles[rand]\r\n    ].style.backgroundImage = `url('${newBonus.imgPATH}')`;\r\n\r\n    newBonus.x = freeTiles[rand];\r\n\r\n    bonuses.push(newBonus);\r\n\r\n    return;\r\n  }\r\n\r\n  const tiles = document.querySelectorAll(\".tile\");\r\n  const freeTiles = document.querySelectorAll(\".tile:not(.tile--snake)\");\r\n\r\n  const randTileId = RandInt({ min: 0, max: freeTiles.length - 1 });\r\n\r\n  const indexOfFreeTile = Array.from(tiles).indexOf(freeTiles[randTileId]);\r\n  const tileCoordinates = {\r\n    x: indexOfFreeTile % boardSize,\r\n    y: Math.floor(indexOfFreeTile / boardSize),\r\n  };\r\n\r\n  const { x, y } = tileCoordinates;\r\n\r\n  // mark food or bonus on the board\r\n  switch (mode) {\r\n    case \"food\":\r\n      food.class = new Food(x, y);\r\n\r\n      board[food.class.y][food.class.x].classList.add(\"tile--food\");\r\n      break;\r\n    case \"bomb\":\r\n      const freeTiles = [];\r\n\r\n      for (let i = 0; i < boardSize; i++) {\r\n        const nextElem = board[i][boardSize - 1];\r\n\r\n        if (\r\n          !nextElem.classList.contains(\"tile--snake\") &&\r\n          !nextElem.classList.contains(\"tile--food\")\r\n        ) {\r\n          freeTiles.push(i);\r\n        }\r\n      }\r\n\r\n      if (freeTiles.length === 0) return;\r\n\r\n      let rand = RandInt({\r\n        min: 0,\r\n        max: freeTiles.length - 1,\r\n      });\r\n\r\n      board[rand][boardSize - 1].classList.add(\"tile--bomb\");\r\n\r\n      let newBomb = new Bomb(boardSize - 1, freeTiles[rand]);\r\n      break;\r\n    default:\r\n      console.error(\"#ERR! -> Przesłano niepoprawny typ bonusu\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handlePlaceTile;\r\n","export default __webpack_public_path__ + \"assets/SPEED2X.a0b832dac35442350bb1bb4991ad026a.png\";","export default __webpack_public_path__ + \"assets/SPEED2X.6f08f0072702c6c59080b722c5f0dc75.wav\";","export default __webpack_public_path__ + \"assets/SPEED 2Xlower.6b0fb71db10e1572f729df1326977064.png\";","export default __webpack_public_path__ + \"assets/SPEED 2Xlower.76cbfa994f82f5d79a896f2e339f2201.wav\";","export default __webpack_public_path__ + \"assets/Freeze.b1c4bc1b6fb900ad64e0c38c0c7936fc.png\";","export default __webpack_public_path__ + \"assets/Freeze.aaa39c866733aa62071d1ff78902879d.mp3\";","export default __webpack_public_path__ + \"assets/Bombs.77406599539cf7a19113ed07321eb7fd.png\";","export default __webpack_public_path__ + \"assets/bombs.529b8944e83780d8ea9f3dbbdb60897f.wav\";","export default __webpack_public_path__ + \"assets/+5 points.ce2d94cfc6b2159165532daeb96a5333.wav\";","export default __webpack_public_path__ + \"assets/-5 points.ec530168190110448115828c53954685.wav\";","export default __webpack_public_path__ + \"assets/+5 points.07303cf152a20326af798466984eb1bb.png\";","export default __webpack_public_path__ + \"assets/-5 points.870d2a49ad6d668e42239fd94a285a98.png\";","import RandInt from \"../functions/RandInt.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\n\r\nimport speed2XImg from \"../../assets/SPEED2X.png\";\r\nimport speed2XAudio from \"../../assets/SPEED2X.wav\";\r\nimport speed2XImgLower from \"../../assets/SPEED 2Xlower.png\";\r\nimport speed2XAudioLower from \"../../assets/SPEED 2Xlower.wav\";\r\nimport FreezeImg from \"../../assets/Freeze.png\";\r\nimport FreezeAudio from \"../../assets/Freeze.mp3\";\r\nimport BombsImg from \"../../assets/Bombs.png\";\r\nimport BombsWAV from \"../../assets/bombs.wav\";\r\nimport Plus5PointsWAV from \"../../assets/+5 points.wav\";\r\nimport Minus5PointsWAV from \"../../assets/-5 points.wav\";\r\nimport Plus5PointsPNG from \"../../assets/+5 points.png\";\r\nimport Minus5PointsPNG from \"../../assets/-5 points.png\";\r\nimport NystagmusPNG from \"../../assets/Nystagmus.png\";\r\nimport NystagmusWAV from \"../../assets/nystagmus.wav\";\r\n\r\nexport const bonusFiles = {\r\n  \"SPEED 2X\": {\r\n    img: speed2XImg,\r\n    audio: speed2XAudio,\r\n  },\r\n  \"SPEED /2X\": {\r\n    img: speed2XImgLower,\r\n    audio: speed2XAudioLower,\r\n  },\r\n  Freeze: {\r\n    img: FreezeImg,\r\n    audio: FreezeAudio,\r\n  },\r\n  Bombs: {\r\n    img: BombsImg,\r\n    audio: BombsWAV,\r\n  },\r\n  Nystagmus: {\r\n    img: NystagmusPNG,\r\n    audio: NystagmusWAV,\r\n  },\r\n  \"+5 points\": {\r\n    img: Plus5PointsPNG,\r\n    audio: Plus5PointsWAV,\r\n  },\r\n  \"-5 points\": {\r\n    img: Minus5PointsPNG,\r\n    audio: Minus5PointsWAV,\r\n  },\r\n};\r\n\r\nexport const bombs = [];\r\n\r\nexport const bonuses = [];\r\n\r\nexport const handleGenerateBonuses = () => {\r\n  const rand = RandInt({\r\n    min: 0,\r\n    max: 100,\r\n  });\r\n\r\n  const chosenBonuses = [\r\n    ...bonusesProbabilities.filter((bonus) => bonus.probability >= rand),\r\n  ];\r\n\r\n  for (const bonus of chosenBonuses) {\r\n    handlePlaceTile({\r\n      mode: \"bonus\",\r\n      bonus: {\r\n        name: bonus.name,\r\n        imgPATH: bonusFiles[bonus.name].img,\r\n        audioPATH: bonusFiles[bonus.name].audio,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const bonusesProbabilities = [\r\n  {\r\n    name: \"SPEED 2X\",\r\n    probability: 70,\r\n  },\r\n  {\r\n    name: \"SPEED /2X\",\r\n    probability: 20,\r\n  },\r\n  {\r\n    name: \"Freeze\",\r\n    probability: 60,\r\n  },\r\n  {\r\n    name: \"Bombs\",\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Nystagmus\",\r\n    probability: 15,\r\n  },\r\n  {\r\n    name: \"+5 points\",\r\n    probability: 25,\r\n  },\r\n  {\r\n    name: \"-5 points\",\r\n    probability: 80,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"assets/Nystagmus.3c7308038ea90a21aa7568a94fc117d7.png\";","export default __webpack_public_path__ + \"assets/nystagmus.445799472810c8e69c180d7da2933ba0.wav\";","import POINT_SRC from \"../../assets/point.mp3\";\r\nimport GAME_OVER_SRC from \"../../assets/gameover.wav\";\r\nimport SNAKESPEED_SRC from \"../../assets/speed_acceleration.wav\";\r\nimport JUMP_SRC from \"../../assets/jump.wav\";\r\nimport START_SRC from \"../../assets/start.wav\";\r\nimport { bonusFiles } from \"../global/bonuses.js\";\r\n\r\nexport const start = new Audio();\r\nexport const jump = new Audio();\r\nexport const snakespeed = new Audio();\r\nexport const point = new Audio();\r\nexport const gameOver = new Audio();\r\nexport const bonus = new Audio();\r\nexport const bomb = new Audio();\r\n\r\nconst handleInitializeAudio = () => {\r\n  point.src = POINT_SRC;\r\n  gameOver.src = GAME_OVER_SRC;\r\n  snakespeed.src = SNAKESPEED_SRC;\r\n  jump.src = JUMP_SRC;\r\n  start.src = START_SRC;\r\n  bomb.src = bonusFiles[\"Bombs\"];\r\n  bomb.volume = 0.1;\r\n\r\n  start.volume = 0.07;\r\n  jump.volume = 0.1;\r\n  point.volue = 0.07;\r\n  snakespeed.volume = 0.3;\r\n  gameOver.volume = 0.3;\r\n  bonus.volume = 0.1;\r\n};\r\n\r\nexport default handleInitializeAudio;\r\n","class Snake {\r\n  constructor(direction, length, speed, x, y, jumps = 0) {\r\n    this.direction = direction;\r\n    this.length = length;\r\n    this.speed = speed;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.jumps = jumps;\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n","import handleInitializeAudio from \"./handleInitializeAudio.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Snake from \"../classes/Snake.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  bonuses,\r\n  sizeRange,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { gameBoard } from \"../global/elements.js\";\r\nimport handlePlaceTile from \"./handlePlaceTile.js\";\r\n\r\nexport const handleAppendBoard = (tileCSS) => {\r\n  let tilesQty = 0;\r\n\r\n  for (let i = 0; i < boardSize; i++) {\r\n    let row = [];\r\n    for (let j = 0; j < boardSize; j++) {\r\n      let tile = document.createElement(\"div\");\r\n\r\n      tile.classList.add(\"tile\");\r\n      tile.style.width = `${tileCSS.width - 2}px`;\r\n      tile.style.height = `${tileCSS.height - 2}px`;\r\n\r\n      gameBoard.appendChild(tile);\r\n      const tileQuery = document.querySelectorAll(\".tile\");\r\n\r\n      row.push(tileQuery[tilesQty]);\r\n\r\n      tilesQty++;\r\n    }\r\n    board.push(row);\r\n  }\r\n};\r\n\r\nexport const handleAppendSnake = () => {\r\n  for (let i = 0; i < snake.class.length; i++) {\r\n    let snakePos = {\r\n      x: snake.class.x,\r\n      y: snake.class.y + i,\r\n    };\r\n\r\n    snakePositions.unshift({ x: snakePos.x, y: snakePos.y });\r\n\r\n    let snakeEl = board[snake.class.y + i][snake.class.x];\r\n    snakeEl.classList.add(\"tile--snake\");\r\n  }\r\n};\r\n\r\nexport const getTileCSS = () => {\r\n  return {\r\n    width: gameBoard.clientWidth / boardSize,\r\n    height: gameBoard.clientHeight / boardSize,\r\n  };\r\n};\r\n\r\nconst handleGenerateBoard = () => {\r\n  handleInitializeAudio();\r\n\r\n  // TODO: generowanie planszy\r\n  let snakePos = {\r\n    x: RandInt({\r\n      min: Math.floor(boardSize / 2) - 3,\r\n      max: Math.floor(boardSize / 2) + 3,\r\n    }),\r\n    y: RandInt({\r\n      min: Math.floor(boardSize / 2) - 1,\r\n      max: Math.floor(boardSize / 2) + 1,\r\n    }),\r\n  };\r\n\r\n  snake.set({\r\n    payload: new Snake(\r\n      null,\r\n      Math.round(boardSize / 3),\r\n      1,\r\n      snakePos.x,\r\n      snakePos.y\r\n    ),\r\n  });\r\n\r\n  handleDisplay({\r\n    boardSize,\r\n    speed: snake.class.speed.toFixed(2),\r\n    snakeLength: snake.class.length,\r\n  });\r\n\r\n  let tileCSS = getTileCSS();\r\n\r\n  handleAppendBoard(tileCSS);\r\n  handleAppendSnake();\r\n\r\n  handlePlaceTile({ mode: \"food\" });\r\n};\r\n\r\nexport default handleGenerateBoard;\r\n","import { bombs } from \"../global/bombs.js\";\r\nimport {\r\n  board,\r\n  food,\r\n  gameStarted,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\nimport handleBonusIsEaten from \"./handleBonusIsEaten.js\";\r\n\r\nconst handleMoveSnake = () => {\r\n  food.class.handleIsEaten();\r\n  handleBonusIsEaten();\r\n  for (const bomb of bombs) bomb.handleBombCollide();\r\n\r\n  if (!gameStarted.val) return;\r\n\r\n  const { x, y } = snakePositions[0];\r\n\r\n  if (board[snake.class.y][snake.class.x].classList.contains(\"tile--snake\")) {\r\n    GameOver();\r\n    return;\r\n  }\r\n\r\n  const lastElem = board[y][x];\r\n\r\n  if (lastElem.classList.contains(\"tile--snake-added-point\")) {\r\n    for (let i = 0; i < snakePositions.length; i++) {\r\n      const { x: nextX, y: nextY } = snakePositions[i];\r\n      const newElem = board[nextY][nextX];\r\n\r\n      if (!newElem.classList.contains(\"tile--snake-added-point\")) {\r\n        newElem.classList.add(\"tile--snake-added-point\");\r\n        break;\r\n      }\r\n    }\r\n\r\n    lastElem.classList.remove(\"tile--snake-added-point\");\r\n  } else if (lastElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n    for (let i = 0; i < snakePositions.length; i++) {\r\n      const { x: nextX, y: nextY } = snakePositions[i];\r\n      const newElem = board[nextY][nextX];\r\n\r\n      if (!newElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n        newElem.classList.add(\"tile--snake-subtracted-point\");\r\n        break;\r\n      }\r\n    }\r\n\r\n    lastElem.classList.remove(\"tile--snake-subtracted-point\");\r\n  }\r\n\r\n  board[y][x].classList.remove(\"tile--snake\");\r\n  snakePositions.shift();\r\n  board[snake.class.y][snake.class.x].classList.add(\"tile--snake\");\r\n  snakePositions.push({ x: snake.class.x, y: snake.class.y });\r\n};\r\n\r\nexport default handleMoveSnake;\r\n","import { bonuses } from \"../global/bonuses.js\";\r\nimport { board, mute, snake } from \"../global/variables.js\";\r\nimport handleBonus from \"./handleBonus.js\";\r\n\r\nconst handleBonusIsEaten = () => {\r\n  let selectedBonus;\r\n\r\n  bonuses.map((bonus, index) => {\r\n    if (bonus.x === snake.class.x && bonus.y === snake.class.y)\r\n      selectedBonus = { bonus, index };\r\n  });\r\n\r\n  if (selectedBonus) {\r\n    const { bonus: foundBonus, index } = selectedBonus;\r\n\r\n    clearInterval(bonuses[index].boostInterval);\r\n\r\n    console.log(\"eaten -> snake ate bonus\");\r\n    const foundTile = board[foundBonus.y][foundBonus.x];\r\n\r\n    foundTile.classList.remove(\"tile--boost\");\r\n    foundTile.style.backgroundImage = \"\";\r\n\r\n    bonuses.splice(index, 1);\r\n\r\n    handleBonus({ type: foundBonus.name });\r\n\r\n    if (!mute.isMuted) {\r\n      const bonus = new Audio();\r\n      bonus.src = foundBonus.audioPATH;\r\n      bonus.play();\r\n    }\r\n  }\r\n};\r\n\r\nexport default handleBonusIsEaten;\r\n","import { bonuses, handleGenerateBonuses } from \"../global/bonuses.js\";\r\nimport { parameterSpeed } from \"../global/elements.js\";\r\nimport {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  snakeDidMove,\r\n  SPEED_CONSTANT,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { snakespeed } from \"./handleInitializeAudio.js\";\r\nimport handleUpdateSnake from \"./handleUpdateSnake.js\";\r\n\r\nconst handleIncreaseSnakeSpeed = () => {\r\n  if (snake.class.jumps % (Math.floor(boardSize / 10) * 9) === 0) {\r\n    snake.class.speed = parseFloat((snake.class.speed + 0.1).toFixed(2));\r\n\r\n    let dividedSpeed = parseFloat((snake.class.speed / 10).toFixed(3));\r\n\r\n    let speedModulo = snake.class.speed % dividedSpeed;\r\n    console.log(snake.class.speed, dividedSpeed, speedModulo);\r\n\r\n    if (\r\n      !mute.isMuted &&\r\n      (snake.class.speed < 2 ||\r\n        (snake.class.speed >= 2 &&\r\n          Math.floor(snake.class.speed % (snake.class.speed / 10)) === 0))\r\n    ) {\r\n      snakespeed.play();\r\n    }\r\n\r\n    parameterSpeed.classList.add(\"parameter-speed--acceleration\");\r\n    handleDisplay({ speed: snake.class.speed.toFixed(2) });\r\n\r\n    setTimeout(() => {\r\n      parameterSpeed.classList.remove(\"parameter-speed--acceleration\");\r\n    }, 1000);\r\n\r\n    interval.val =\r\n      750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n    clearInterval(gameInterval.interval);\r\n    gameInterval.set(setInterval(handleJump, interval.val));\r\n  }\r\n};\r\n\r\nconst handleJump = () => {\r\n  if (Math.random() < 1 && bonuses.length === 0) handleGenerateBonuses();\r\n\r\n  handleUpdateSnake();\r\n\r\n  if (!gameStarted.val) return;\r\n\r\n  snake.class.jumps++;\r\n\r\n  // for (const bonus of bonuses) bonus.handleTransformBonus();\r\n\r\n  handleIncreaseSnakeSpeed();\r\n\r\n  snakeDidMove.set(true);\r\n};\r\n\r\nexport default handleJump;\r\n","import { boardSize, snake } from \"../global/variables.js\";\r\nimport handleMoveSnake from \"./handleMoveSnake.js\";\r\n\r\nconst handleUpdateSnake = () => {\r\n  switch (snake.class.direction) {\r\n    case \"W\":\r\n      snake.class.y = snake.class.y === 0 ? boardSize - 1 : snake.class.y - 1;\r\n      handleMoveSnake();\r\n      break;\r\n    case \"S\":\r\n      snake.class.y = snake.class.y === boardSize - 1 ? 0 : snake.class.y + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"A\":\r\n      snake.class.x = snake.class.x === 0 ? boardSize - 1 : snake.class.x - 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"D\":\r\n      snake.class.x = snake.class.x === boardSize - 1 ? 0 : snake.class.x + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    default:\r\n      console.error(\"#ERR: Nieprawidłowy kierunek!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleUpdateSnake;\r\n","import { sound } from \"../global/elements.js\";\r\nimport {\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakeDidMove,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleStartGame from \"./handleStartGame.js\";\r\n\r\nconst handleKeyPress = ({ key }) => {\r\n  if (key === \"M\") {\r\n    mute.isMuted = !mute.isMuted;\r\n    sound.classList.toggle(\"sound--muted\");\r\n    return;\r\n  }\r\n\r\n  if (\r\n    (key === \"W\" && snake.class.direction === \"S\") ||\r\n    (key === \"S\" && snake.class.direction === \"W\") ||\r\n    (key === \"A\" && snake.class.direction === \"D\") ||\r\n    (key === \"D\" && snake.class.direction === \"A\")\r\n  )\r\n    return;\r\n\r\n  if (!gameStarted.val && snake.class.jumps === 0) {\r\n    if (key === \"S\") {\r\n      snakePositions.reverse();\r\n      snake.set({\r\n        attr: \"y\",\r\n        payload: snakePositions[snakePositions.length - 1].y,\r\n      });\r\n    }\r\n\r\n    snake.class.direction = key;\r\n\r\n    handleStartGame();\r\n  }\r\n\r\n  if (gameStarted.val && snakeDidMove.state) {\r\n    snakeDidMove.set(false);\r\n    snake.class.direction = key;\r\n  }\r\n};\r\n\r\nexport default handleKeyPress;\r\n","import {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  SPEED_CONSTANT,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { jump, start } from \"./handleInitializeAudio.js\";\r\nimport handleJump from \"./handleJump.js\";\r\n\r\nconst handleStartGame = () => {\r\n  gameStarted.val = true;\r\n\r\n  if (!mute.isMuted) {\r\n    start.play();\r\n  }\r\n\r\n  interval.val =\r\n    750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n  gameInterval.set(setInterval(handleJump, interval.val));\r\n\r\n  timerInterval.set(\r\n    setInterval(() => {\r\n      if (!mute.isMuted) {\r\n        jump.play();\r\n      }\r\n\r\n      timer.time++;\r\n      handleDisplay({ timer: timer.time });\r\n    }, 1000)\r\n  );\r\n};\r\n\r\nexport default handleStartGame;\r\n","import Preferences from \"./script/classes/Preferences.js\";\r\nimport handleGenerateBoard from \"./script/functions/handleGenerateBoard.js\";\r\nimport handleKeyPress from \"./script/functions/handleKeyPress.js\";\r\nimport { currentTheme } from \"./script/global/CSSroot.js\";\r\nimport { controlBtns, sound } from \"./script/global/elements.js\";\r\nimport {\r\n  W,\r\n  A,\r\n  S,\r\n  D,\r\n  M,\r\n  topKey,\r\n  bottomKey,\r\n  leftKey,\r\n  rightKey,\r\n} from \"./script/global/keys.js\";\r\nimport preferences from \"./script/global/preferences.js\";\r\nimport { mute } from \"./script/global/variables.js\";\r\nimport \"./style.css\";\r\n\r\nsound.addEventListener(\"click\", () => {\r\n  mute.isMuted = !mute.isMuted;\r\n  sound.classList.toggle(\"sound--muted\");\r\n});\r\n\r\ncontrolBtns.forEach((control, index) => {\r\n  control.addEventListener(\"touchstart\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"touchend\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n\r\n  control.addEventListener(\"mousedown\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"mouseup\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n});\r\n\r\nlet key;\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      controlBtns[0].classList.add(\"control--pressed\");\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      controlBtns[1].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      controlBtns[2].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      controlBtns[3].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (e) => {\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  controlBtns.forEach((control) =>\r\n    control.classList.remove(\"control--pressed\")\r\n  );\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      key = \"W\";\r\n\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      key = \"S\";\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      key = \"A\";\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      key = \"D\";\r\n\r\n      break;\r\n    case M:\r\n      key = \"M\";\r\n\r\n      break;\r\n\r\n    default:\r\n      return;\r\n      break;\r\n  }\r\n\r\n  handleKeyPress({ key });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  preferences.set({\r\n    payload: new Preferences({\r\n      boardColor: currentTheme.boardColor,\r\n      textColor: currentTheme.textColor,\r\n      tileColor: currentTheme.tileColor,\r\n      foodColor: currentTheme.foodColor,\r\n      background: currentTheme.background,\r\n      snakeColor: currentTheme.snakeColor,\r\n    }),\r\n  });\r\n  handleGenerateBoard();\r\n});\r\n","export const W = 87;\r\nexport const A = 65;\r\nexport const S = 83;\r\nexport const D = 68;\r\nexport const M = 77;\r\n\r\nexport const topKey = 38;\r\nexport const bottomKey = 40;\r\nexport const leftKey = 37;\r\nexport const rightKey = 39;\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","root","querySelector","rs","getComputedStyle","CSS","getPropertyValue","currentTheme","boardColor","localStorage","getItem","snakeColor","tileColor","foodColor","background","constructor","board","style","setProperty","textColor","handlePickTheme","theme","setItem","handleNystagmus","nystagmusInterval","state","setInterval","setTimeout","clearInterval","min","max","Math","ceil","floor","random","sizeRange","boardSize","size","input","prompt","parseInt","alert","snake","class","set","payload","attr","food","gameStarted","val","value","snakePositions","timer","time","increment","mute","isMuted","toggle","interval","gameInterval","func","timerInterval","snakeDidMove","x","y","name","parameterSpeed","gameBoard","sound","controlBtns","querySelectorAll","snakeLength","speed","textContent","navigator","vibrate","gameOver","play","firstX","firstY","nextX","nextY","undefined","newTile","newX","newY","subX","subY","classList","contains","handleIsEaten","remove","mode","snakePosLen","firstElem","i","nextElem","shift","unshift","add","preferences","bombs","bombsState","bombsInterval","type","newCoordinates","console","error","bonusID","imgPATH","audioPATH","super","intervalRange","boostInterval","handleBonusTranslate","backgroundImage","foundBonusID","bonuses","findIndex","bns","splice","bonusFiles","img","log","bonus","Audio","bombId","BOMB_INTERVAL_RANGE","bombInterval","handleBombTranslate","handleBombCollide","bomb","newBonus","freeTiles","forEach","index","push","rand","tiles","randTileId","indexOfFreeTile","Array","from","indexOf","tileCoordinates","audio","Freeze","Bombs","Nystagmus","bonusesProbabilities","probability","snakespeed","direction","jumps","volume","volue","snakePos","round","tileCSS","tilesQty","row","j","tile","createElement","width","height","appendChild","tileQuery","handleAppendBoard","clientWidth","clientHeight","handleAppendSnake","selectedBonus","map","foundBonus","foundTile","lastElem","newElem","handleJump","chosenBonuses","filter","handleGenerateBonuses","parseFloat","toFixed","dividedSpeed","speedModulo","handleIncreaseSnakeSpeed","key","reverse","addEventListener","control","keyCode","keyIdentifier"],"sourceRoot":""}