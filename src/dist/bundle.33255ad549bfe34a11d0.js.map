{"version":3,"file":"bundle.33255ad549bfe34a11d0.js","mappings":"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","sources":["webpack://snakejs/webpack/bootstrap","webpack://snakejs/webpack/runtime/global","webpack://snakejs/webpack/runtime/publicPath","webpack://snakejs/./src/assets/point.mp3","webpack://snakejs/./src/assets/gameover.wav","webpack://snakejs/./src/assets/speed_acceleration.wav","webpack://snakejs/./src/assets/jump.wav","webpack://snakejs/./src/assets/start.wav","webpack://snakejs/./src/script/functions/handleInitializeAudio.js","webpack://snakejs/./src/script/functions/RandInt.js","webpack://snakejs/./src/script/classes/Snake.js","webpack://snakejs/./src/script/global/variables.js","webpack://snakejs/./src/script/functions/handleValidateBoardSize.js","webpack://snakejs/./src/script/global/elements.js","webpack://snakejs/./src/script/functions/handleDisplay.js","webpack://snakejs/./src/script/classes/Boost.js","webpack://snakejs/./src/script/functions/GameOver.js","webpack://snakejs/./src/script/classes/Food.js","webpack://snakejs/./src/script/functions/getNewTile.js","webpack://snakejs/./src/assets/SPEED2X.png","webpack://snakejs/./src/assets/SPEED2X.wav","webpack://snakejs/./src/assets/Freeze.png","webpack://snakejs/./src/assets/Freeze.mp3","webpack://snakejs/./src/assets/Bombs.png","webpack://snakejs/./src/assets/bombs.wav","webpack://snakejs/./src/assets/+5 points.wav","webpack://snakejs/./src/assets/-5 points.wav","webpack://snakejs/./src/assets/+5 points.png","webpack://snakejs/./src/assets/-5 points.png","webpack://snakejs/./src/script/global/bonuses.js","webpack://snakejs/./src/assets/Nystagmus.png","webpack://snakejs/./src/assets/nystagmus.wav","webpack://snakejs/./src/script/functions/handleBonusIsEaten.js","webpack://snakejs/./src/script/classes/Bonus.js","webpack://snakejs/./src/script/functions/handlePlaceTile.js","webpack://snakejs/./src/script/functions/handleMoveSnake.js","webpack://snakejs/./src/script/functions/handleJump.js","webpack://snakejs/./src/script/functions/handleUpdateSnake.js","webpack://snakejs/./src/script/functions/handleKeyPress.js","webpack://snakejs/./src/script/functions/handleStartGame.js","webpack://snakejs/./src/script.js","webpack://snakejs/./src/script/global/keys.js","webpack://snakejs/./src/script/functions/handleGenerateBoard.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export default __webpack_public_path__ + \"assets/point.a41846ef811ebc769132d677a9d33a21.mp3\";","export default __webpack_public_path__ + \"assets/gameover.0242c96fc833693dc721ea75ebb2d1b4.wav\";","export default __webpack_public_path__ + \"assets/speed_acceleration.952b0801786b04a70a0133de0ce831a6.wav\";","export default __webpack_public_path__ + \"assets/jump.ae2de8e7e136703f362699ea22c8a8c5.wav\";","export default __webpack_public_path__ + \"assets/start.105e220c664c62490ce0c19c670010fc.wav\";","import POINT_SRC from \"../../assets/point.mp3\";\r\nimport GAME_OVER_SRC from \"../../assets/gameover.wav\";\r\nimport SNAKESPEED_SRC from \"../../assets/speed_acceleration.wav\";\r\nimport JUMP_SRC from \"../../assets/jump.wav\";\r\nimport START_SRC from \"../../assets/start.wav\";\r\n\r\nexport const start = new Audio();\r\nexport const jump = new Audio();\r\nexport const snakespeed = new Audio();\r\nexport const point = new Audio();\r\nexport const gameOver = new Audio();\r\nexport const bonus = new Audio();\r\n\r\nconst handleInitializeAudio = () => {\r\n  point.src = POINT_SRC;\r\n  gameOver.src = GAME_OVER_SRC;\r\n  snakespeed.src = SNAKESPEED_SRC;\r\n  jump.src = JUMP_SRC;\r\n  start.src = START_SRC;\r\n\r\n  start.volume = 0.07;\r\n  jump.volume = 0.1;\r\n  point.volue = 0.07;\r\n  snakespeed.volume = 0.3;\r\n  gameOver.volume = 0.3;\r\n  bonus.volume = 0.3;\r\n};\r\n\r\nexport default handleInitializeAudio;\r\n","const RandInt = ({ min, max }) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport default RandInt;\r\n","class Snake {\r\n  constructor(direction, length, speed, x, y, jumps = 0) {\r\n    this.direction = direction;\r\n    this.length = length;\r\n    this.speed = speed;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.jumps = jumps;\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n","import handleValidateBoardSize from \"../functions/handleValidateBoardSize.js\";\r\n\r\n// board variables\r\nexport const board = [];\r\nexport const sizeRange = { min: 10, max: 50 };\r\nexport let boardSize = handleValidateBoardSize();\r\n\r\n// classes\r\nexport let snake = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      snake.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    snake.class = payload;\r\n  },\r\n};\r\nexport let food = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      food.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    food.class = payload;\r\n  },\r\n};\r\n\r\n// checks whether the game has already started\r\nexport let gameStarted = {\r\n  val: false,\r\n  set: (value) => {\r\n    gameStarted.val = value;\r\n  },\r\n};\r\n\r\n// contains positions of all snake's tiles\r\nexport const snakePositions = [];\r\n\r\nexport let timer = {\r\n  time: 0,\r\n  increment: () => {\r\n    timer.time++;\r\n  },\r\n};\r\n\r\nexport let mute = {\r\n  isMuted: false,\r\n  toggle: () => {\r\n    mute.isMuted = !mute.isMuted;\r\n  },\r\n};\r\nexport let interval = {\r\n  val: 0,\r\n  set: (payload) => {\r\n    interval.val = payload;\r\n  },\r\n};\r\n\r\n// intervals\r\nexport let gameInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    gameInterval.interval = func;\r\n  },\r\n};\r\nexport let timerInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    timerInterval.interval = func;\r\n  },\r\n};\r\n\r\n// speed constant (used for snake intervals)\r\nexport const SPEED_CONSTANT = 4;\r\n\r\n// checks whether the snake has moved since last set direction\r\nexport let snakeDidMove = {\r\n  state: false,\r\n  set: (state) => {\r\n    snakeDidMove.state = state;\r\n  },\r\n};\r\n","import { sizeRange } from \"../global/variables.js\";\r\n\r\nconst handleValidateBoardSize = () => {\r\n  let size;\r\n\r\n  while (!size || size < sizeRange.min || size > sizeRange.max) {\r\n    const input = prompt(\r\n      `Podaj wielkość planszy (minimalna - ${sizeRange.min}, maksymalna - ${sizeRange.max}):`\r\n    );\r\n    size = parseInt(input);\r\n\r\n    if (!size || size < sizeRange.min || size > sizeRange.max) {\r\n      alert(\"Wprowadź poprawną wartość!\");\r\n    }\r\n  }\r\n\r\n  return size;\r\n};\r\n\r\nexport default handleValidateBoardSize;\r\n","export const time = document.querySelector(\"[data-parameter=time]\");\r\nexport const size = document.querySelector(\"[data-parameter=board-size]\");\r\nexport const parameterSpeed = document.querySelector(\"[data-parameter=speed]\");\r\nexport const length = document.querySelector(\"[data-parameter=length]\");\r\n\r\nexport const topBtn = document.querySelector(\"[data-direction=top]\");\r\nexport const bottomBtn = document.querySelector(\"[data-direction=bottom]\");\r\nexport const leftBtn = document.querySelector(\"[data-direction=left]\");\r\nexport const rightBtn = document.querySelector(\"[data-direction=right]\");\r\n\r\nexport const gameBoard = document.querySelector(\".gameboard\");\r\n\r\nexport const sound = document.querySelector(\".sound\");\r\n\r\nexport const controlBtns = document.querySelectorAll(\".control\");\r\n","import { length, parameterSpeed, size, time } from \"../global/elements.js\";\r\n\r\nconst handleDisplay = ({ snakeLength, speed, timer, boardSize }) => {\r\n  if (speed) parameterSpeed.textContent = `${speed}`;\r\n  if (snakeLength) length.textContent = `${snakeLength}`;\r\n  if (boardSize)\r\n    size.textContent = `Rozmiar planszy: ${boardSize}x${boardSize}`;\r\n  if (timer)\r\n    time.textContent = `Czas gry: \r\n    ${\r\n      Math.floor(timer / 60 / 60) < 10\r\n        ? \"0\" + Math.floor(timer / 60 / 60)\r\n        : Math.floor(timer / 60 / 60)\r\n    }:${\r\n      Math.floor(timer / 60) % 60 < 10\r\n        ? \"0\" + (Math.floor(timer / 60) % 60)\r\n        : Math.floor(timer / 60) % 60\r\n    }:${timer % 60 < 10 ? \"0\" + (timer % 60) : timer % 60}\r\n    `;\r\n};\r\n\r\nexport default handleDisplay;\r\n","class Boost {\r\n  constructor(x, y, name = \"\") {\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport default Boost;\r\n","import {\r\n  gameInterval,\r\n  mute,\r\n  snake,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport { gameOver } from \"./handleInitializeAudio.js\";\r\n\r\nconst GameOver = () => {\r\n  const payload = {\r\n    score: snake.class.length,\r\n    jumps: snake.class.jumps,\r\n    time: {\r\n      hours: Math.floor(timer.time / 60 / 60),\r\n      minutes: Math.floor(timer.time / 60) % 60,\r\n      seconds: timer.time % 60,\r\n    },\r\n  };\r\n\r\n  clearInterval(timerInterval.interval);\r\n  clearInterval(gameInterval.interval);\r\n\r\n  if (!mute.isMuted) gameOver.play();\r\n};\r\n\r\nexport default GameOver;\r\n","import { point } from \"../functions/handleInitializeAudio.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\nimport { board, mute, snake, snakePositions } from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\nimport getNewTile from \"../functions/getNewTile.js\";\r\nimport { length } from \"../global/elements.js\";\r\nimport handleDisplay from \"../functions/handleDisplay.js\";\r\n\r\nclass Food extends Boost {\r\n  handleIsEaten = () => {\r\n    if (snake.class.x === this.x && snake.class.y === this.y) {\r\n      if (!mute.isMuted) {\r\n        point.play();\r\n      }\r\n\r\n      board[this.y][this.x].classList.remove(\"tile--food\");\r\n      handlePlaceTile({ mode: \"food\" });\r\n\r\n      //TODO: adding new tiles to the end of the snake\r\n      const { x: firstX, y: firstY } = snakePositions[0];\r\n      const { x: nextX, y: nextY } = snakePositions[1];\r\n\r\n      const subX = nextX - firstX;\r\n      const subY = nextY - firstY;\r\n\r\n      const { newX, newY } = getNewTile(subX, subY, firstX, firstY);\r\n\r\n      snake.class.length++;\r\n      handleDisplay({ snakeLength: snake.class.length });\r\n      length.style.color = \"#d1d122\";\r\n\r\n      snakePositions.unshift({ x: newX, y: newY });\r\n      board[newY][newX].classList.add(\"tile--snake\");\r\n\r\n      setTimeout(() => {\r\n        length.style.color = \"#000\";\r\n      }, 300);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Food;\r\n","import { board, boardSize } from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\n\r\nconst getNewTile = (subX, subY, firstX, firstY) => {\r\n  let x = firstX;\r\n  let y = firstY;\r\n\r\n  if (subX !== 0) {\r\n    x = (firstX - subX + boardSize) % boardSize;\r\n  } else if (subY !== 0) {\r\n    y = (firstY - subY + boardSize) % boardSize;\r\n  }\r\n\r\n  if (board[y][x].classList.contains(\"tile--snake\")) {\r\n    //! game over\r\n    GameOver();\r\n  }\r\n\r\n  return { newX: x, newY: y };\r\n};\r\n\r\nexport default getNewTile;\r\n","export default __webpack_public_path__ + \"assets/SPEED2X.a0b832dac35442350bb1bb4991ad026a.png\";","export default __webpack_public_path__ + \"assets/SPEED2X.6f08f0072702c6c59080b722c5f0dc75.wav\";","export default __webpack_public_path__ + \"assets/Freeze.b1c4bc1b6fb900ad64e0c38c0c7936fc.png\";","export default __webpack_public_path__ + \"assets/Freeze.aaa39c866733aa62071d1ff78902879d.mp3\";","export default __webpack_public_path__ + \"assets/Bombs.77406599539cf7a19113ed07321eb7fd.png\";","export default __webpack_public_path__ + \"assets/bombs.529b8944e83780d8ea9f3dbbdb60897f.wav\";","export default __webpack_public_path__ + \"assets/+5 points.ce2d94cfc6b2159165532daeb96a5333.wav\";","export default __webpack_public_path__ + \"assets/-5 points.ec530168190110448115828c53954685.wav\";","export default __webpack_public_path__ + \"assets/+5 points.07303cf152a20326af798466984eb1bb.png\";","export default __webpack_public_path__ + \"assets/-5 points.870d2a49ad6d668e42239fd94a285a98.png\";","import RandInt from \"../functions/RandInt.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\n\r\nimport speed2XImg from \"../../assets/SPEED2X.png\";\r\nimport speed2XAudio from \"../../assets/SPEED2X.wav\";\r\nimport FreezeImg from \"../../assets/Freeze.png\";\r\nimport FreezeAudio from \"../../assets/Freeze.mp3\";\r\nimport BombsImg from \"../../assets/Bombs.png\";\r\nimport BombsWAV from \"../../assets/bombs.wav\";\r\nimport Plus5PointsWAV from \"../../assets/+5 points.wav\";\r\nimport Minus5PointsWAV from \"../../assets/-5 points.wav\";\r\nimport Plus5PointsPNG from \"../../assets/+5 points.png\";\r\nimport Minus5PointsPNG from \"../../assets/-5 points.png\";\r\nimport NystagmusPNG from \"../../assets/Nystagmus.png\";\r\nimport NystagmusWAV from \"../../assets/nystagmus.wav\";\r\n\r\nexport const bonusFiles = {\r\n  \"SPEED 2X\": {\r\n    img: speed2XImg,\r\n    audio: speed2XAudio,\r\n  },\r\n  \"SPEED /2X\": {\r\n    img: speed2XImg,\r\n    audio: speed2XAudio,\r\n  },\r\n  Freeze: {\r\n    img: FreezeImg,\r\n    audio: FreezeAudio,\r\n  },\r\n  Bombs: {\r\n    img: BombsImg,\r\n    audio: BombsWAV,\r\n  },\r\n  Nystagmus: {\r\n    img: NystagmusPNG,\r\n    audio: NystagmusWAV,\r\n  },\r\n  \"+5 points\": {\r\n    img: Plus5PointsPNG,\r\n    audio: Plus5PointsWAV,\r\n  },\r\n  \"-5 points\": {\r\n    img: Minus5PointsPNG,\r\n    audio: Minus5PointsWAV,\r\n  },\r\n};\r\n\r\nexport const bombs = [];\r\n\r\nexport const bonuses = [];\r\n\r\nexport const handleGenerateBonuses = () => {\r\n  const rand = RandInt({\r\n    min: 0,\r\n    max: 100,\r\n  });\r\n\r\n  const chosenBonuses = [\r\n    ...bonusesProbabilities.filter((bonus) => bonus.probability > rand),\r\n  ];\r\n\r\n  for (const bonus of chosenBonuses) {\r\n    handlePlaceTile({ mode: \"bonus\", bonus });\r\n  }\r\n};\r\n\r\nexport const bonusesProbabilities = [\r\n  {\r\n    name: \"SPEED 2X\",\r\n    probability: 35,\r\n  },\r\n  {\r\n    name: \"SPEED /2X\",\r\n    probability: 25,\r\n  },\r\n  {\r\n    name: \"Freeze\",\r\n    probability: 50,\r\n  },\r\n  {\r\n    name: \"Bombs\",\r\n    probability: 20,\r\n  },\r\n  {\r\n    name: \"Nystagmus\",\r\n    probability: 5,\r\n  },\r\n  {\r\n    name: \"+5 points\",\r\n    probability: 40,\r\n  },\r\n  {\r\n    name: \"-5 points\",\r\n    probability: 45,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"assets/Nystagmus.3c7308038ea90a21aa7568a94fc117d7.png\";","export default __webpack_public_path__ + \"assets/nystagmus.445799472810c8e69c180d7da2933ba0.wav\";","import { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport { board, snake } from \"../global/variables.js\";\r\nimport { bonus } from \"./handleInitializeAudio.js\";\r\n\r\nconst handleBonusIsEaten = () => {\r\n  const foundBonus = bonuses.find(\r\n    (bonus) => bonus.x === snake.class.x && bonus.y === snake.class.y\r\n  );\r\n\r\n  if (foundBonus) {\r\n    bonuses.filter((bonus) => bonus.bonusID !== foundBonus.bonusID);\r\n    const foundTile = board[foundBonus.y][foundBonus.x];\r\n\r\n    foundTile.classList.remove(\"tile--boost\");\r\n    foundTile.style.backgroundImage = \"\";\r\n\r\n    clearInterval(bonuses[foundBonus.bonusID].boostInterval);\r\n\r\n    bonus.src = bonusFiles[foundBonus.name].audio;\r\n    bonus.play();\r\n\r\n    // TODO: react to picking up a bonus for example adding  bombs or increasing speed\r\n\r\n    if (foundBonus) return true;\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default handleBonusIsEaten;\r\n","import RandInt from \"../functions/RandInt.js\";\r\nimport handleBonusIsEaten from \"../functions/handleBonusIsEaten.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport { board, boardSize, interval } from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\n\r\nclass Bonus extends Boost {\r\n  constructor(x, y, name, bonusID, imgPATH, audioPATH) {\r\n    super(x, y, name);\r\n    this.bonusID = bonusID;\r\n    this.imgPATH = imgPATH;\r\n    this.audioPATH = audioPATH;\r\n\r\n    this.boostInterval = setInterval(\r\n      this.handleBonusTranslate,\r\n      (interval.val *\r\n        RandInt({\r\n          min: 25,\r\n          max: 200,\r\n        })) /\r\n        100\r\n    );\r\n  }\r\n\r\n  handleBonusTranslate = () => {\r\n    // TODO: bonus translation, check whether the bonus has reached the bottom of the board, if so - delete this bonus from bonuses using this.bonusID\r\n    board[this.y][this.x].classList.remove(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = \"\";\r\n    this.y++;\r\n\r\n    if (this.y == boardSize) {\r\n      clearInterval(this.boostInterval);\r\n      bonuses.filter((bonus) => bonus !== this.bonusID);\r\n      return;\r\n    }\r\n    const isEaten = handleBonusIsEaten();\r\n\r\n    if (isEaten) return;\r\n\r\n    board[this.y][this.x].classList.add(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = `url('${\r\n      bonusFiles[this.name].img\r\n    }')`;\r\n  };\r\n}\r\n\r\nexport default Bonus;\r\n","import { board, boardSize, food } from \"../global/variables.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Food from \"../classes/Food.js\";\r\nimport Bonus from \"../classes/Bonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\n\r\nconst handlePlaceTile = ({ mode, bonus }) => {\r\n  const tiles = document.querySelectorAll(\".tile\");\r\n  const freeTiles = document.querySelectorAll(\r\n    \".tile:not(.tile--snake):not(.tile--boost):not(.tile--bomb)\"\r\n  );\r\n\r\n  const randTileId = RandInt({ min: 0, max: freeTiles.length - 1 });\r\n\r\n  const indexOfFreeTile = Array.from(tiles).indexOf(freeTiles[randTileId]);\r\n  const tileCoordinates = {\r\n    x: indexOfFreeTile % boardSize,\r\n    y: Math.floor(indexOfFreeTile / boardSize),\r\n  };\r\n\r\n  const { x, y } = tileCoordinates;\r\n\r\n  // mark food or bonus on the board\r\n  switch (mode) {\r\n    case \"food\":\r\n      food.class = new Food(x, y);\r\n\r\n      board[food.class.y][food.class.x].classList.add(\"tile--food\");\r\n      break;\r\n    case \"bonus\":\r\n      let newBonus;\r\n      if (bonus)\r\n        newBonus = new Bonus(\r\n          x,\r\n          0,\r\n          bonus.name,\r\n          bonuses.length,\r\n          bonus.imgPATH,\r\n          bonus.audioPATH\r\n        );\r\n\r\n      board[0][newBonus.x].classList.add(\"tile--boost\");\r\n      board[0][newBonus.x].style.backgroundImage = `url('${\r\n        bonusFiles[bonus.name].img\r\n      }')`;\r\n      board[0][newBonus.x].style.backgroundSize = \"cover\";\r\n      bonuses.push(newBonus);\r\n      break;\r\n    case \"bomb\":\r\n      break;\r\n    default:\r\n      console.error(\"#ERR! -> Przesłano niepoprawny typ bonusu\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handlePlaceTile;\r\n","import { board, food, snake, snakePositions } from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\n\r\nconst handleMoveSnake = () => {\r\n  food.class.handleIsEaten();\r\n\r\n  const { x, y } = snakePositions[0];\r\n\r\n  if (board[snake.class.y][snake.class.x].classList.contains(\"tile--snake\")) {\r\n    GameOver();\r\n    return;\r\n  }\r\n\r\n  board[y][x].classList.remove(\"tile--snake\");\r\n  snakePositions.shift();\r\n  board[snake.class.y][snake.class.x].classList.add(\"tile--snake\");\r\n  snakePositions.push({ x: snake.class.x, y: snake.class.y });\r\n};\r\n\r\nexport default handleMoveSnake;\r\n","import { bonuses, handleGenerateBonuses } from \"../global/bonuses.js\";\r\nimport { parameterSpeed } from \"../global/elements.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  gameInterval,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  snakeDidMove,\r\n  SPEED_CONSTANT,\r\n} from \"../global/variables.js\";\r\nimport handleBonusIsEaten from \"./handleBonusIsEaten.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { snakespeed } from \"./handleInitializeAudio.js\";\r\nimport handleUpdateSnake from \"./handleUpdateSnake.js\";\r\n\r\nconst handleIncreaseSnakeSpeed = () => {\r\n  if (snake.class.jumps % (Math.floor(boardSize / 10) * 9) === 0) {\r\n    snake.class.speed = parseFloat((snake.class.speed + 0.1).toFixed(2));\r\n\r\n    let dividedSpeed = parseFloat((snake.class.speed / 10).toFixed(3));\r\n\r\n    let speedModulo = snake.class.speed % dividedSpeed;\r\n    console.log(snake.class.speed, dividedSpeed, speedModulo);\r\n\r\n    if (\r\n      !mute.isMuted &&\r\n      (snake.class.speed < 2 ||\r\n        (snake.class.speed >= 2 &&\r\n          Math.floor(snake.class.speed % (snake.class.speed / 10)) === 0))\r\n    ) {\r\n      snakespeed.play();\r\n    }\r\n\r\n    parameterSpeed.classList.add(\"parameter-speed--acceleration\");\r\n    handleDisplay({ speed: snake.class.speed.toFixed(2) });\r\n\r\n    setTimeout(() => {\r\n      parameterSpeed.classList.remove(\"parameter-speed--acceleration\");\r\n    }, 1000);\r\n\r\n    interval.val =\r\n      750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n    clearInterval(gameInterval.interval);\r\n    gameInterval.set(setInterval(handleJump, interval.val));\r\n  }\r\n};\r\n\r\nconst handleJump = () => {\r\n  if (Math.random() < 1 && bonuses.length === 0) handleGenerateBonuses();\r\n\r\n  handleUpdateSnake();\r\n\r\n  snake.class.jumps++;\r\n\r\n  handleBonusIsEaten();\r\n\r\n  // for (const bonus of bonuses) bonus.handleTransformBonus();\r\n\r\n  handleIncreaseSnakeSpeed();\r\n\r\n  snakeDidMove.set(true);\r\n};\r\n\r\nexport default handleJump;\r\n","import { boardSize, snake } from \"../global/variables.js\";\r\nimport handleMoveSnake from \"./handleMoveSnake.js\";\r\n\r\nconst handleUpdateSnake = () => {\r\n  switch (snake.class.direction) {\r\n    case \"W\":\r\n      snake.class.y = snake.class.y === 0 ? boardSize - 1 : snake.class.y - 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"S\":\r\n      snake.class.y = snake.class.y === boardSize - 1 ? 0 : snake.class.y + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"A\":\r\n      snake.class.x = snake.class.x === 0 ? boardSize - 1 : snake.class.x - 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"D\":\r\n      snake.class.x = snake.class.x === boardSize - 1 ? 0 : snake.class.x + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    default:\r\n      console.error(\"#ERR: Nieprawidłowy kierunek!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleUpdateSnake;\r\n","import { sound } from \"../global/elements.js\";\r\nimport {\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakeDidMove,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleStartGame from \"./handleStartGame.js\";\r\n\r\nconst handleKeyPress = ({ key }) => {\r\n  if (key === \"M\") {\r\n    mute.isMuted = !mute.isMuted;\r\n    sound.classList.toggle(\"sound--muted\");\r\n    return;\r\n  }\r\n\r\n  if (\r\n    (key === \"W\" && snake.class.direction === \"S\") ||\r\n    (key === \"S\" && snake.class.direction === \"W\") ||\r\n    (key === \"A\" && snake.class.direction === \"D\") ||\r\n    (key === \"D\" && snake.class.direction === \"A\")\r\n  )\r\n    return;\r\n\r\n  if (!gameStarted.val) {\r\n    if (key === \"S\") {\r\n      snakePositions.reverse();\r\n      snake.set({\r\n        attr: \"y\",\r\n        payload: snakePositions[snakePositions.length - 1].y,\r\n      });\r\n    }\r\n\r\n    snake.class.direction = key;\r\n\r\n    handleStartGame();\r\n  }\r\n\r\n  if (gameStarted.val && snakeDidMove.state) {\r\n    snakeDidMove.set(false);\r\n    snake.class.direction = key;\r\n  }\r\n};\r\n\r\nexport default handleKeyPress;\r\n","import {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  SPEED_CONSTANT,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { jump, start } from \"./handleInitializeAudio.js\";\r\nimport handleJump from \"./handleJump.js\";\r\n\r\nconst handleStartGame = () => {\r\n  gameStarted.val = true;\r\n\r\n  if (!mute.isMuted) {\r\n    start.play();\r\n  }\r\n\r\n  interval.val =\r\n    750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n  gameInterval.set(setInterval(handleJump, interval.val));\r\n\r\n  timerInterval.set(\r\n    setInterval(() => {\r\n      if (!mute.isMuted) {\r\n        jump.play();\r\n      }\r\n\r\n      timer.time++;\r\n      handleDisplay({ timer: timer.time });\r\n    }, 1000)\r\n  );\r\n};\r\n\r\nexport default handleStartGame;\r\n","import handleGenerateBoard from \"./script/functions/handleGenerateBoard.js\";\r\nimport handleKeyPress from \"./script/functions/handleKeyPress.js\";\r\nimport { controlBtns, sound } from \"./script/global/elements.js\";\r\nimport {\r\n  W,\r\n  A,\r\n  S,\r\n  D,\r\n  M,\r\n  topKey,\r\n  bottomKey,\r\n  leftKey,\r\n  rightKey,\r\n} from \"./script/global/keys.js\";\r\nimport { mute } from \"./script/global/variables.js\";\r\nimport \"./style.css\";\r\n\r\nsound.addEventListener(\"click\", () => {\r\n  mute.isMuted = !mute.isMuted;\r\n  sound.classList.toggle(\"sound--muted\");\r\n});\r\n\r\ncontrolBtns.forEach((control, index) => {\r\n  control.addEventListener(\"mousedown\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"mouseup\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n});\r\n\r\nlet key;\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      controlBtns[0].classList.add(\"control--pressed\");\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      controlBtns[1].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      controlBtns[2].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      controlBtns[3].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (e) => {\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  controlBtns.forEach((control) =>\r\n    control.classList.remove(\"control--pressed\")\r\n  );\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      key = \"W\";\r\n\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      key = \"S\";\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      key = \"A\";\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      key = \"D\";\r\n\r\n      break;\r\n    case M:\r\n      key = \"M\";\r\n\r\n      break;\r\n\r\n    default:\r\n      return;\r\n      break;\r\n  }\r\n\r\n  handleKeyPress({ key });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", handleGenerateBoard);\r\n","export const W = 87;\r\nexport const A = 65;\r\nexport const S = 83;\r\nexport const D = 68;\r\nexport const M = 77;\r\n\r\nexport const topKey = 38;\r\nexport const bottomKey = 40;\r\nexport const leftKey = 37;\r\nexport const rightKey = 39;\r\n","import handleInitializeAudio from \"./handleInitializeAudio.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Snake from \"../classes/Snake.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  bonuses,\r\n  sizeRange,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { gameBoard } from \"../global/elements.js\";\r\nimport handlePlaceTile from \"./handlePlaceTile.js\";\r\n\r\nexport const handleAppendBoard = (tileCSS) => {\r\n  let tilesQty = 0;\r\n\r\n  for (let i = 0; i < boardSize; i++) {\r\n    let row = [];\r\n    for (let j = 0; j < boardSize; j++) {\r\n      let tile = document.createElement(\"div\");\r\n\r\n      tile.classList.add(\"tile\");\r\n      tile.style.width = `${tileCSS.width - 2}px`;\r\n      tile.style.height = `${tileCSS.height - 2}px`;\r\n\r\n      gameBoard.appendChild(tile);\r\n      const tileQuery = document.querySelectorAll(\".tile\");\r\n\r\n      row.push(tileQuery[tilesQty]);\r\n\r\n      tilesQty++;\r\n    }\r\n    board.push(row);\r\n  }\r\n};\r\n\r\nexport const handleAppendSnake = () => {\r\n  for (let i = 0; i < snake.class.length; i++) {\r\n    let snakePos = {\r\n      x: snake.class.x,\r\n      y: snake.class.y + i,\r\n    };\r\n\r\n    snakePositions.unshift({ x: snakePos.x, y: snakePos.y });\r\n\r\n    let snakeEl = board[snake.class.y + i][snake.class.x];\r\n    snakeEl.classList.add(\"tile--snake\");\r\n  }\r\n};\r\n\r\nexport const getTileCSS = () => {\r\n  return {\r\n    width: gameBoard.clientWidth / boardSize,\r\n    height: gameBoard.clientHeight / boardSize,\r\n  };\r\n};\r\n\r\nconst handleGenerateBoard = () => {\r\n  handleInitializeAudio();\r\n\r\n  // TODO: generowanie planszy\r\n  let snakePos = {\r\n    x: RandInt({\r\n      min: Math.floor(boardSize / 2) - 3,\r\n      max: Math.floor(boardSize / 2) + 3,\r\n    }),\r\n    y: RandInt({\r\n      min: Math.floor(boardSize / 2) - 1,\r\n      max: Math.floor(boardSize / 2) + 1,\r\n    }),\r\n  };\r\n\r\n  snake.set({\r\n    payload: new Snake(\r\n      null,\r\n      Math.round(boardSize / 3),\r\n      1,\r\n      snakePos.x,\r\n      snakePos.y\r\n    ),\r\n  });\r\n\r\n  handleDisplay({\r\n    boardSize,\r\n    speed: snake.class.speed.toFixed(2),\r\n    snakeLength: snake.class.length,\r\n  });\r\n\r\n  let tileCSS = getTileCSS();\r\n\r\n  handleAppendBoard(tileCSS);\r\n  handleAppendSnake();\r\n\r\n  handlePlaceTile({ mode: \"food\" });\r\n};\r\n\r\nexport default handleGenerateBoard;\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","Audio","snakespeed","gameOver","bonus","min","max","Math","ceil","floor","random","constructor","direction","speed","x","y","jumps","board","sizeRange","boardSize","size","input","prompt","parseInt","alert","snake","class","set","payload","attr","food","gameStarted","val","value","snakePositions","timer","time","increment","mute","isMuted","toggle","interval","gameInterval","func","timerInterval","snakeDidMove","state","querySelector","parameterSpeed","gameBoard","sound","controlBtns","querySelectorAll","snakeLength","textContent","name","clearInterval","play","handleIsEaten","classList","remove","mode","firstX","firstY","nextX","nextY","subX","subY","newX","newY","contains","unshift","add","setTimeout","bonusFiles","img","audio","Freeze","Bombs","Nystagmus","bonuses","bonusesProbabilities","probability","foundBonus","find","filter","bonusID","foundTile","style","backgroundImage","boostInterval","imgPATH","audioPATH","super","setInterval","handleBonusTranslate","tiles","freeTiles","randTileId","indexOfFreeTile","Array","from","indexOf","tileCoordinates","newBonus","backgroundSize","push","console","error","shift","handleJump","rand","chosenBonuses","handleGenerateBonuses","parseFloat","toFixed","dividedSpeed","speedModulo","log","handleIncreaseSnakeSpeed","key","reverse","addEventListener","forEach","control","index","keyCode","keyIdentifier","volume","volue","snakePos","round","tileCSS","tilesQty","i","row","j","tile","createElement","width","height","appendChild","tileQuery","handleAppendBoard","clientWidth","clientHeight","handleAppendSnake"],"sourceRoot":""}