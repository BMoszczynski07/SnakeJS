{"version":3,"file":"bundle.e8a3dc01608f7388ac03.js","mappings":"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","sources":["webpack://snakejs/webpack/bootstrap","webpack://snakejs/webpack/runtime/global","webpack://snakejs/webpack/runtime/publicPath","webpack://snakejs/./src/script/global/CSSroot.js","webpack://snakejs/./src/script/classes/Preferences.js","webpack://snakejs/./src/assets/point.mp3","webpack://snakejs/./src/assets/gameover.wav","webpack://snakejs/./src/assets/speed_acceleration.wav","webpack://snakejs/./src/assets/jump.wav","webpack://snakejs/./src/assets/start.wav","webpack://snakejs/./src/assets/explosion.wav","webpack://snakejs/./src/script/functions/RandInt.js","webpack://snakejs/./src/script/functions/handleValidateBoardSize.js","webpack://snakejs/./src/script/global/variables.js","webpack://snakejs/./src/script/classes/Boost.js","webpack://snakejs/./src/script/global/elements.js","webpack://snakejs/./src/script/functions/handleDisplay.js","webpack://snakejs/./src/script/global/bombs.js","webpack://snakejs/./src/script/global/gameover.js","webpack://snakejs/./src/script/global/leaderboard.js","webpack://snakejs/./src/script/functions/GameOver.js","webpack://snakejs/./src/script/functions/handleFoodEaten.js","webpack://snakejs/./src/script/functions/getNewTile.js","webpack://snakejs/./src/script/classes/Food.js","webpack://snakejs/./src/script/global/preferences.js","webpack://snakejs/./src/script/functions/handleBonus.js","webpack://snakejs/./src/script/classes/Bonus.js","webpack://snakejs/./src/script/classes/Bomb.js","webpack://snakejs/./src/script/functions/handlePlaceTile.js","webpack://snakejs/./src/assets/SPEED2X.png","webpack://snakejs/./src/assets/SPEED2X.wav","webpack://snakejs/./src/assets/SPEED 2Xlower.png","webpack://snakejs/./src/assets/SPEED 2Xlower.wav","webpack://snakejs/./src/assets/Freeze.png","webpack://snakejs/./src/assets/Freeze.mp3","webpack://snakejs/./src/assets/Bombs.png","webpack://snakejs/./src/assets/bombs.wav","webpack://snakejs/./src/assets/+5 points.wav","webpack://snakejs/./src/assets/-5 points.wav","webpack://snakejs/./src/assets/+5 points.png","webpack://snakejs/./src/assets/-5 points.png","webpack://snakejs/./src/script/global/bonuses.js","webpack://snakejs/./src/assets/Nystagmus.png","webpack://snakejs/./src/assets/nystagmus.wav","webpack://snakejs/./src/script/functions/handleInitializeAudio.js","webpack://snakejs/./src/script/classes/Snake.js","webpack://snakejs/./src/script/functions/handleGenerateBoard.js","webpack://snakejs/./src/script/functions/handleMoveSnake.js","webpack://snakejs/./src/script/functions/handleBonusIsEaten.js","webpack://snakejs/./src/script/functions/handleJump.js","webpack://snakejs/./src/script/functions/handleUpdateSnake.js","webpack://snakejs/./src/script/functions/handleKeyPress.js","webpack://snakejs/./src/script/functions/handleStartGame.js","webpack://snakejs/./src/assets/1st-place.png","webpack://snakejs/./src/script.js","webpack://snakejs/./src/script/global/keys.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const root = document.querySelector(\":root\");\r\nexport const rs = getComputedStyle(root);\r\n\r\nexport const CSS = {\r\n  \"--board-color\": rs.getPropertyValue(\"--board-color\"),\r\n  \"--snake-color\": rs.getPropertyValue(\"--snake-color\"),\r\n  \"--tile-color\": rs.getPropertyValue(\"--tile-color\"),\r\n  \"--background\": rs.getPropertyValue(\"--background\"),\r\n  \"--food-color\": rs.getPropertyValue(\"--food-color\"),\r\n  \"--text-color\": rs.getPropertyValue(\"--text-color\"),\r\n};\r\n\r\nexport let currentTheme = {\r\n  boardColor: localStorage.getItem(\"board-theme\") || CSS[\"--board-color\"],\r\n  snakeColor: localStorage.getItem(\"snake-color\") || CSS[\"--snake-color\"],\r\n  tileColor: localStorage.getItem(\"tile-color\") || CSS[\"--tile-color\"],\r\n  foodColor: localStorage.getItem(\"food-color\") || CSS[\"--food-color\"],\r\n  background: localStorage.getItem(\"background\") || CSS[\"--background\"],\r\n};\r\n","import { root } from \"../global/CSSroot.js\";\r\n\r\nclass Preferences {\r\n  constructor(board) {\r\n    this.board = board;\r\n\r\n    root.style.setProperty(\"--board-color\", this.board.boardColor);\r\n    root.style.setProperty(\"--text-color\", this.board.textColor);\r\n    root.style.setProperty(\"--snake-color\", this.board.snakeColor);\r\n    root.style.setProperty(\"--background\", this.board.background);\r\n    root.style.setProperty(\"--food-color\", this.board.foodColor);\r\n    root.style.setProperty(\"--tile-color\", this.board.tileColor);\r\n  }\r\n\r\n  handlePickTheme = ({ theme }) => {\r\n    const {\r\n      textColor,\r\n      boardColor,\r\n      tileColor,\r\n      background,\r\n      foodColor,\r\n      snakeColor,\r\n    } = theme;\r\n\r\n    root.style.setProperty(\"--board-color\", boardColor);\r\n    root.style.setProperty(\"--text-color\", textColor);\r\n    root.style.setProperty(\"--snake-color\", snakeColor);\r\n    root.style.setProperty(\"--background\", background);\r\n    root.style.setProperty(\"--food-color\", foodColor);\r\n    root.style.setProperty(\"--tile-color\", tileColor);\r\n    localStorage.setItem(\"--board-color\", boardColor);\r\n    localStorage.setItem(\"--text-color\", textColor);\r\n    localStorage.setItem(\"--snake-color\", snakeColor);\r\n    localStorage.setItem(\"--background\", background);\r\n    localStorage.setItem(\"--food-color\", foodColor);\r\n    localStorage.setItem(\"--tile-color\", tileColor);\r\n  };\r\n\r\n  handleNystagmus = () => {\r\n    let nystagmusInterval;\r\n    let state = false;\r\n\r\n    nystagmusInterval = setInterval(() => {\r\n      state = !state;\r\n\r\n      root.style.setProperty(\"--tile-color\", `${state ? \"#fff\" : \"#000\"}`);\r\n      root.style.setProperty(\"--snake-color\", `${state ? \"#000\" : \"#fff\"}`);\r\n      root.style.setProperty(\"--food-color\", `${state ? \"#f00\" : \"#00f\"}`);\r\n    }, 50);\r\n\r\n    setTimeout(() => {\r\n      root.style.setProperty(\"--snake-color\", this.board.snakeColor);\r\n      root.style.setProperty(\"--tile-color\", this.board.tileColor);\r\n      root.style.setProperty(\"--food-color\", this.board.foodColor);\r\n      clearInterval(nystagmusInterval);\r\n    }, 4000);\r\n  };\r\n}\r\n\r\nexport default Preferences;\r\n","export default __webpack_public_path__ + \"assets/point.mp3\";","export default __webpack_public_path__ + \"assets/gameover.wav\";","export default __webpack_public_path__ + \"assets/speed_acceleration.wav\";","export default __webpack_public_path__ + \"assets/jump.wav\";","export default __webpack_public_path__ + \"assets/start.wav\";","export default __webpack_public_path__ + \"assets/explosion.wav\";","const RandInt = ({ min, max }) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport default RandInt;\r\n","import { sizeRange } from \"../global/variables.js\";\r\n\r\nconst handleValidateBoardSize = () => {\r\n  let size;\r\n\r\n  while (!size || size < sizeRange.min || size > sizeRange.max) {\r\n    const input = prompt(\r\n      `Podaj wielkość planszy (minimalna - ${sizeRange.min}, maksymalna - ${sizeRange.max}):`\r\n    );\r\n    size = parseInt(input);\r\n\r\n    if (!size || size < sizeRange.min || size > sizeRange.max) {\r\n      alert(\"Wprowadź poprawną wartość!\");\r\n    }\r\n  }\r\n\r\n  return size;\r\n};\r\n\r\nexport default handleValidateBoardSize;\r\n","import handleValidateBoardSize from \"../functions/handleValidateBoardSize.js\";\r\n\r\n// board variables\r\nexport const board = [];\r\nexport const sizeRange = { min: 10, max: 40 };\r\nexport let boardSize = handleValidateBoardSize();\r\n\r\nexport const handleSetBoardSize = () => {\r\n  boardSize = handleValidateBoardSize();\r\n};\r\n\r\n// classes\r\nexport let snake = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      snake.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    snake.class = payload;\r\n  },\r\n};\r\nexport let food = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      food.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    food.class = payload;\r\n  },\r\n};\r\n\r\n// checks whether the game has already started\r\nexport let gameStarted = {\r\n  val: false,\r\n  set: (value) => {\r\n    gameStarted.val = value;\r\n  },\r\n};\r\n\r\n// contains positions of all snake's tiles\r\nexport const snakePositions = [];\r\n\r\nexport let timer = {\r\n  time: 0,\r\n  increment: () => {\r\n    timer.time++;\r\n  },\r\n  set: ({ payload }) => {\r\n    timer.time = payload;\r\n  },\r\n};\r\n\r\nexport let mute = {\r\n  isMuted: false,\r\n  toggle: () => {\r\n    mute.isMuted = !mute.isMuted;\r\n  },\r\n};\r\nexport let interval = {\r\n  val: 0,\r\n  set: (payload) => {\r\n    interval.val = payload;\r\n  },\r\n};\r\n\r\n// intervals\r\nexport let gameInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    gameInterval.interval = func;\r\n  },\r\n};\r\nexport let timerInterval = {\r\n  interval: \"\",\r\n  set: (func) => {\r\n    timerInterval.interval = func;\r\n  },\r\n};\r\n\r\n// speed constant (used for snake intervals)\r\nexport const SPEED_CONSTANT = 4;\r\n\r\n// checks whether the snake has moved since last set direction\r\nexport let snakeDidMove = {\r\n  state: false,\r\n  set: (state) => {\r\n    snakeDidMove.state = state;\r\n  },\r\n};\r\n","class Boost {\r\n  constructor(x, y, name = \"\") {\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n\r\nexport default Boost;\r\n","export const time = document.querySelector(\"[data-parameter=time]\");\r\nexport const size = document.querySelector(\"[data-parameter=board-size]\");\r\nexport const parameterSpeed = document.querySelector(\"[data-parameter=speed]\");\r\nexport const length = document.querySelector(\"[data-parameter=length]\");\r\n\r\nexport const topBtn = document.querySelector(\"[data-direction=top]\");\r\nexport const bottomBtn = document.querySelector(\"[data-direction=bottom]\");\r\nexport const leftBtn = document.querySelector(\"[data-direction=left]\");\r\nexport const rightBtn = document.querySelector(\"[data-direction=right]\");\r\n\r\nexport const gameBoard = document.querySelector(\".gameboard\");\r\n\r\nexport const sound = document.querySelector(\".sound\");\r\n\r\nexport const controlBtns = document.querySelectorAll(\".control\");\r\n","import { length, parameterSpeed, size, time } from \"../global/elements.js\";\r\n\r\nconst handleDisplay = ({ snakeLength, speed, timer, boardSize }) => {\r\n  if (speed) parameterSpeed.textContent = `${speed}`;\r\n  if (snakeLength) length.textContent = `${snakeLength}`;\r\n  if (boardSize)\r\n    size.textContent = `Rozmiar planszy: ${boardSize}x${boardSize}`;\r\n  if (timer)\r\n    time.textContent = `Czas gry: \r\n    ${\r\n      Math.floor(timer / 60 / 60) < 10\r\n        ? \"0\" + Math.floor(timer / 60 / 60)\r\n        : Math.floor(timer / 60 / 60)\r\n    }:${\r\n      Math.floor(timer / 60) % 60 < 10\r\n        ? \"0\" + (Math.floor(timer / 60) % 60)\r\n        : Math.floor(timer / 60) % 60\r\n    }:${timer % 60 < 10 ? \"0\" + (timer % 60) : timer % 60}\r\n    `;\r\n};\r\n\r\nexport default handleDisplay;\r\n","export const bombs = [];\r\n\r\nexport let bombsState = {\r\n  state: true,\r\n  toggle: () => {\r\n    bombsState.state = !bombsState.state;\r\n  },\r\n};\r\n\r\nexport let bombsInterval = {\r\n  val: \"\",\r\n  set: ({ payload }) => {\r\n    bombsInterval.val = payload;\r\n  },\r\n};\r\n","export const gameover = document.querySelector(\".game-over\");\r\nexport const container = document.querySelector(\".container\");\r\n\r\nexport const pointsEl = document.querySelector(\"[data-points]\");\r\nexport const speedEl = document.querySelector(\"[data-speed]\");\r\nexport const lengthEl = document.querySelector(\"[data-length]\");\r\nexport const boardSizeEl = document.querySelector(\"[data-boardSize]\");\r\nexport const timerEl = document.querySelector(\"[data-timer]\");\r\n\r\nexport const usernameInput = document.querySelector(\"[data-username-input]\");\r\nexport const messageInput = document.querySelector(\"[data-message-input]\");\r\n\r\nexport const playAgain = document.querySelector(\".play-again\");\r\nexport const pencil = document.querySelector(\".pencil\");\r\n\r\nexport const shareForm = document.querySelector(\".gameover-form\");\r\n","export const topPlayers = [\r\n  {\r\n    username: \"Bartosz Moszczyński\",\r\n    message:\r\n      \"lorem ipsum dolor sit amet consectetur adipiscing elit sed diam nonumy euismod tempor\",\r\n    imgURL: \"https://tiny.pl/wzmff\",\r\n    statistics: {\r\n      points: 68400,\r\n      speed: 1,\r\n      boardSize: 20,\r\n      length: 40,\r\n      time: {\r\n        hours: 0,\r\n        minutes: 2,\r\n        seconds: 36,\r\n      },\r\n    },\r\n    published: {\r\n      year: 2023,\r\n      month: 5,\r\n      day: 1,\r\n    },\r\n  },\r\n  {\r\n    username: \"Bartosz Moszczyński\",\r\n    message: \"lorem ipsum dolor sit amet\",\r\n    imgURL: \"https://tiny.pl/wzmff\",\r\n    statistics: {\r\n      points: 65400,\r\n      speed: 3,\r\n      boardSize: 40,\r\n      length: 60,\r\n      time: {\r\n        hours: 0,\r\n        minutes: 3,\r\n        seconds: 24,\r\n      },\r\n    },\r\n    published: {\r\n      year: 2023,\r\n      month: 4,\r\n      day: 29,\r\n    },\r\n  },\r\n  {\r\n    username: \"Bartosz Moszczyński\",\r\n    message: \"lorem ipsum dolor sit amet\",\r\n    imgURL: \"https://tiny.pl/wzmff\",\r\n    statistics: {\r\n      points: 62400,\r\n      speed: 2,\r\n      boardSize: 20,\r\n      length: 40,\r\n      time: {\r\n        hours: 0,\r\n        minutes: 3,\r\n        seconds: 24,\r\n      },\r\n    },\r\n    published: {\r\n      year: 2023,\r\n      month: 5,\r\n      day: 2,\r\n    },\r\n  },\r\n  {\r\n    username: \"Hu Tao\",\r\n    message:\r\n      '\"Hu\" as in: \"Who put me in this coffin?\", and Tao as in: \"I cant get TAOt!\" :D',\r\n    imgURL: \"https://wallpapercave.com/wp/wp11693252.jpg\",\r\n    statistics: {\r\n      points: 62400,\r\n      speed: 2,\r\n      boardSize: 20,\r\n      length: 40,\r\n      time: {\r\n        hours: 0,\r\n        minutes: 3,\r\n        seconds: 24,\r\n      },\r\n    },\r\n    published: {\r\n      year: 2023,\r\n      month: 5,\r\n      day: 2,\r\n    },\r\n  },\r\n];\r\n\r\nconst leaderboardTop = document.querySelector(\".leaderboard-top\");\r\n\r\nconst handleCreateElement = (index, record) => {\r\n  const { username, message, imgURL: profile_src, statistics } = record;\r\n  const { time } = statistics;\r\n  const { hours, minutes, seconds } = time;\r\n  const { points, speed, boardSize } = statistics;\r\n\r\n  const leaderboardRecord = document.createElement(\"div\");\r\n  leaderboardRecord.classList.add(\"leaderboard-record\");\r\n  const recordTrophy = document.createElement(\"div\");\r\n  recordTrophy.classList.add(\"leaderboard-record-trophy\");\r\n  const trophy = document.createElement(\"img\");\r\n  trophy.classList.add(\"leaderboard-trophy-img\");\r\n  const playerPos = document.createElement(\"div\");\r\n  playerPos.classList.add(\"leaderboard-position\");\r\n  const leaderboardInfo = document.createElement(\"div\");\r\n  leaderboardInfo.classList.add(\"leaderboard-info\");\r\n  const leaderboardProfile = document.createElement(\"div\");\r\n  leaderboardProfile.classList.add(\"leaderboard-profile\");\r\n  const leaderboardProfileImg = document.createElement(\"img\");\r\n  leaderboardProfileImg.classList.add(\"leaderboard-profile-img\");\r\n  const leaderboardUsername = document.createElement(\"div\");\r\n  leaderboardUsername.classList.add(\"leaderboard-username\");\r\n  const leaderboardMessage = document.createElement(\"div\");\r\n  leaderboardMessage.classList.add(\"leaderboard-message\");\r\n  const leaderboardMessageIcon = document.createElement(\"i\");\r\n  leaderboardMessageIcon.classList.add(\"fa-regular\");\r\n  leaderboardMessageIcon.classList.add(\"fa-message\");\r\n  const leaderboardMessageContent = document.createElement(\"h5\");\r\n  leaderboardMessageContent.classList.add(\"leaderboard-message-content\");\r\n  const leaderboardStatistics = document.createElement(\"div\");\r\n  leaderboardStatistics.classList.add(\"leaderboard-statistics\");\r\n  const leaderboardStatisticsArr = [];\r\n\r\n  const statisticIcons = [\r\n    \"fa-solid fa-star statistic-icon\",\r\n    \"fa-solid fa-gauge-high statistic-icon\",\r\n    \"fa-solid fa-maximize statistic-icon\",\r\n    \"fa-solid fa-clock statistic-icon\",\r\n  ];\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    const leaderboardStatistic = document.createElement(\"div\");\r\n    leaderboardStatistic.classList.add(\"leaderboard-statistic\");\r\n    const statisticIcon = document.createElement(\"i\");\r\n    const statisticIconClasses = [...statisticIcons[i].split(\" \")];\r\n    statisticIconClasses.map((className) => {\r\n      statisticIcon.classList.add(className);\r\n    });\r\n    const statisticSpan = document.createElement(\"span\");\r\n\r\n    switch (i) {\r\n      case 0:\r\n        statisticSpan.textContent = points;\r\n        break;\r\n      case 1:\r\n        statisticSpan.textContent = speed.toFixed(2);\r\n        break;\r\n      case 2:\r\n        statisticSpan.textContent = boardSize;\r\n        break;\r\n      case 3:\r\n        statisticSpan.textContent = `${hours > 10 ? hours : \"0\" + hours}:${\r\n          minutes > 10 ? minutes : \"0\" + minutes\r\n        }:${seconds > 10 ? seconds : \"0\" + payload.time.seconds}`;\r\n        break;\r\n    }\r\n\r\n    statisticSpan.classList.add(\"statistic-span\");\r\n\r\n    leaderboardStatistic.appendChild(statisticIcon);\r\n    leaderboardStatistic.appendChild(statisticSpan);\r\n\r\n    leaderboardStatisticsArr.push(leaderboardStatistic);\r\n  }\r\n\r\n  leaderboardUsername.textContent = username;\r\n  if (message !== \"\") leaderboardMessageContent.textContent = message;\r\n\r\n  leaderboardStatisticsArr.map((stat) =>\r\n    leaderboardStatistics.appendChild(stat)\r\n  );\r\n\r\n  leaderboardMessage.appendChild(leaderboardMessageIcon);\r\n  leaderboardMessage.appendChild(leaderboardMessageContent);\r\n\r\n  if (message === \"\") leaderboardMessage.style.display = \"none\";\r\n\r\n  leaderboardProfile.appendChild(leaderboardProfileImg);\r\n  leaderboardProfile.appendChild(leaderboardUsername);\r\n\r\n  leaderboardInfo.appendChild(leaderboardProfile);\r\n  leaderboardInfo.appendChild(leaderboardMessage);\r\n  leaderboardInfo.appendChild(leaderboardStatistics);\r\n\r\n  recordTrophy.appendChild(trophy);\r\n  recordTrophy.appendChild(playerPos);\r\n\r\n  leaderboardRecord.appendChild(recordTrophy);\r\n  leaderboardRecord.appendChild(leaderboardInfo);\r\n\r\n  console.log(leaderboardRecord);\r\n\r\n  leaderboardProfileImg.src = profile_src;\r\n\r\n  if (index > 2) playerPos.textContent = index + 1;\r\n\r\n  switch (index) {\r\n    case 0:\r\n      trophy.src = \"./assets/1st-place.png\";\r\n      break;\r\n    case 1:\r\n      trophy.src = \"./assets/2nd-place.png\";\r\n      break;\r\n    case 2:\r\n      trophy.src = \"./assets/3rd-place.png\";\r\n      break;\r\n    default:\r\n      trophy.src = \"./assets/star.png\";\r\n      break;\r\n  }\r\n\r\n  leaderboardRecord.style = `--record-animation-delay: ${index * 0.1}s`;\r\n\r\n  return leaderboardRecord;\r\n};\r\n\r\nexport const handleFetchRecords = ({ from, to }) => {\r\n  // TODO: fetch some records from the API and store them into topPlayers[] array\r\n  // fetching records from the API...\r\n\r\n  // map through the records and store them in the leaderboard\r\n  for (const [index, record] of topPlayers.entries()) {\r\n    const recordElem = handleCreateElement(index, record);\r\n\r\n    leaderboardTop.appendChild(recordElem);\r\n  }\r\n};\r\n\r\nexport const calculatePos = () => {\r\n  // TODO: fetch the position of the player from the API using endpoint '/api/user/get-pos'\r\n};\r\n\r\nexport const sharePos = (e) => {\r\n  // TODO: add position to the DOM and a table, and then do PATCH request to the API (this will be form submit function)\r\n  e.preventDefault();\r\n};\r\n","import { bombs, bombsInterval } from \"../global/bombs.js\";\r\nimport { bonuses } from \"../global/bonuses.js\";\r\nimport {\r\n  boardSizeEl,\r\n  container,\r\n  gameover,\r\n  lengthEl,\r\n  pencil,\r\n  playAgain,\r\n  pointsEl,\r\n  shareForm,\r\n  speedEl,\r\n  timerEl,\r\n  usernameInput,\r\n} from \"../global/gameover.js\";\r\nimport { sharePos } from \"../global/leaderboard.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  handleSetBoardSize,\r\n  mute,\r\n  snake,\r\n  snakePositions,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport handleGenerateBoard from \"./handleGenerateBoard.js\";\r\nimport { gameOver } from \"./handleInitializeAudio.js\";\r\n\r\nconst handlePlayAgain = () => {\r\n  gameover.style.display = \"none\";\r\n  container.style.display = \"none\";\r\n\r\n  document.querySelectorAll(\".tile\").forEach((tile) => tile.remove());\r\n  let snakePosLen = snakePositions.length;\r\n  for (let i = 0; i < snakePosLen; i++) {\r\n    snakePositions.shift();\r\n  }\r\n\r\n  for (let i = 0; i < boardSize; i++) {\r\n    board.pop();\r\n  }\r\n\r\n  let bonusesLen = bonuses.length;\r\n\r\n  for (let i = 0; i < bonusesLen; i++) {\r\n    clearInterval(bonuses[0].boostInterval);\r\n    bonuses.shift();\r\n  }\r\n\r\n  clearInterval(bombsInterval.val);\r\n  bombsInterval.val = \"\";\r\n\r\n  let bombsLen = bombs.length;\r\n\r\n  for (let i = 0; i < bombsLen; i++) {\r\n    clearInterval(bombs[0].bombInterval);\r\n    bombs.shift();\r\n  }\r\n\r\n  playAgain.removeEventListener(\"click\", handlePlayAgain);\r\n  pencil.removeEventListener(\"click\", usernameInputFocus);\r\n\r\n  handleSetBoardSize();\r\n\r\n  handleGenerateBoard();\r\n};\r\n\r\nconst usernameInputFocus = () => {\r\n  usernameInput.focus();\r\n};\r\n\r\nconst GameOver = () => {\r\n  gameover.style.display = \"flex\";\r\n  container.style.display = \"flex\";\r\n\r\n  clearInterval(timerInterval.interval);\r\n  clearInterval(gameInterval.interval);\r\n\r\n  gameStarted.val = false;\r\n\r\n  const { speed, length } = snake.class;\r\n\r\n  const POINTS_CONSTANT = 15;\r\n\r\n  const totalPoints = Math.round(length * speed * boardSize * POINTS_CONSTANT);\r\n\r\n  const payload = {\r\n    totalPoints,\r\n    speed,\r\n    boardSize,\r\n    length,\r\n    time: {\r\n      hours: Math.floor(timer.time / 60 / 60),\r\n      minutes: Math.floor(timer.time / 60) % 60,\r\n      seconds: timer.time % 60,\r\n    },\r\n  };\r\n\r\n  pointsEl.textContent = `${payload.totalPoints} Punkty`;\r\n  speedEl.textContent = `${payload.speed.toFixed(2)} Prędkość`;\r\n  lengthEl.textContent = `${payload.length} Długość`;\r\n  boardSizeEl.textContent = `${payload.boardSize}x${payload.boardSize} Rozmiar`;\r\n  timerEl.textContent = `${\r\n    payload.time.hours > 10 ? payload.time.hours : \"0\" + payload.time.hours\r\n  }:${\r\n    payload.time.minutes > 10\r\n      ? payload.time.minutes\r\n      : \"0\" + payload.time.minutes\r\n  }:${\r\n    payload.time.seconds > 10\r\n      ? payload.time.seconds\r\n      : \"0\" + payload.time.seconds\r\n  } Czas gry`;\r\n\r\n  playAgain.addEventListener(\"click\", handlePlayAgain);\r\n  pencil.addEventListener(\"click\", usernameInputFocus);\r\n\r\n  shareForm.addEventListener(\"submit\", sharePos);\r\n\r\n  setTimeout(() => {\r\n    navigator.vibrate([200, 100, 300]);\r\n  }, 150);\r\n\r\n  if (!mute.isMuted) gameOver.play();\r\n};\r\n\r\nexport default GameOver;\r\n","import { snake, snakePositions } from \"../global/variables.js\";\r\nimport getNewTile from \"./getNewTile.js\";\r\n\r\nconst handleFoodEaten = () => {\r\n  //TODO: adding new tiles to the end of the snake\r\n  const { x: firstX, y: firstY } = snakePositions[0];\r\n  const { x: nextX, y: nextY } = snakePositions[1]\r\n    ? snakePositions[1]\r\n    : { x: undefined, y: undefined };\r\n\r\n  if (!nextX || !nextY) {\r\n    let newTile = { x: 0, y: 0 };\r\n\r\n    switch (snake.class.direction) {\r\n      case \"W\":\r\n        newTile.x = firstX;\r\n        newTile.y = firstY + 1;\r\n        break;\r\n      case \"S\":\r\n        newTile.x = firstX;\r\n        newTile.y = firstY - 1;\r\n        break;\r\n      case \"A\":\r\n        newTile.x = firstX + 1;\r\n        newTile.y = firstY;\r\n        break;\r\n      case \"D\":\r\n        newTile.x = firstX - 1;\r\n        newTile.y = firstY;\r\n        break;\r\n    }\r\n\r\n    return { newX: newTile.x, newY: newTile.y };\r\n  }\r\n\r\n  const subX = nextX - firstX;\r\n  const subY = nextY - firstY;\r\n\r\n  return getNewTile(subX, subY, firstX, firstY);\r\n};\r\n\r\nexport default handleFoodEaten;\r\n","import { board, boardSize } from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\n\r\nconst getNewTile = (subX, subY, firstX, firstY) => {\r\n  let x = firstX;\r\n  let y = firstY;\r\n\r\n  if (subX !== 0) {\r\n    x = (firstX - subX + boardSize) % boardSize;\r\n  } else if (subY !== 0) {\r\n    y = (firstY - subY + boardSize) % boardSize;\r\n  }\r\n\r\n  if (board[y][x].classList.contains(\"tile--snake\")) {\r\n    //! game over\r\n    GameOver();\r\n    return { newX: x, newY: y };\r\n  }\r\n\r\n  return { newX: x, newY: y };\r\n};\r\n\r\nexport default getNewTile;\r\n","import { point } from \"../functions/handleInitializeAudio.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\nimport {\r\n  board,\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\nimport { length } from \"../global/elements.js\";\r\nimport handleDisplay from \"../functions/handleDisplay.js\";\r\nimport handleFoodEaten from \"../functions/handleFoodEaten.js\";\r\n\r\nclass Food extends Boost {\r\n  handleIsEaten = () => {\r\n    if (snake.class.x === this.x && snake.class.y === this.y) {\r\n      if (!mute.isMuted) {\r\n        point.play();\r\n      }\r\n\r\n      board[this.y][this.x].classList.remove(\"tile--food\");\r\n      handlePlaceTile({ mode: \"food\" });\r\n\r\n      const { newX, newY } = handleFoodEaten();\r\n\r\n      if (!gameStarted.val) return;\r\n\r\n      let snakePosLen = snakePositions.length;\r\n\r\n      const { x: firstX, y: firstY } = snakePositions[0];\r\n      const firstElem = board[firstY][firstX]\r\n        ? board[firstY][firstX]\r\n        : undefined;\r\n\r\n      if (firstElem) {\r\n        if (firstElem.classList.contains(\"tile--snake-added-point\")) {\r\n          // remove added points\r\n\r\n          for (let i = 0; i < snakePosLen; i++) {\r\n            const { x: nextX, y: nextY } = snakePositions[i];\r\n            const nextElem = board[nextY][nextX];\r\n\r\n            nextElem.classList.remove(\"tile--snake-added-point\");\r\n          }\r\n        } else if (\r\n          firstElem.classList.contains(\"tile--snake-subtracted-point\")\r\n        ) {\r\n          // remove subtracted points\r\n\r\n          for (let i = 0; i < snakePosLen; i++) {\r\n            const { x: nextX, y: nextY } = snakePositions[0];\r\n            const nextElem = board[nextY][nextX];\r\n\r\n            if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n              nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n              nextElem.classList.remove(\"tile--snake\");\r\n              snakePositions.shift();\r\n              snake.class.length--;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      snake.class.length++;\r\n      handleDisplay({ snakeLength: snake.class.length });\r\n      length.style.color = \"#d1d122\";\r\n\r\n      snakePositions.unshift({ x: newX, y: newY });\r\n      board[newY][newX].classList.add(\"tile--snake\");\r\n\r\n      setTimeout(() => {\r\n        length.style.color = \"#000\";\r\n      }, 300);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Food;\r\n","export const boardThemesList = {\r\n  light: {\r\n    boardColor: \"#dbdbdb\",\r\n    tileColor: \"#efefef\",\r\n    snakeColor: \"#444444\",\r\n    foodColor: \"#c4c415\",\r\n    background: \"#fff\",\r\n    textColor: \"#000\",\r\n  },\r\n  dark: {\r\n    boardTheme: \"#000\",\r\n    tileColor: \"#202020\",\r\n    snakeColor: \"#ececec\",\r\n    foodColor: \"#120f31\",\r\n    background: \"#262222\",\r\n    textColor: \"#cecece\",\r\n  },\r\n  beige: {\r\n    boardTheme: \"#abac77\",\r\n    tileColor: \"#c7c799\",\r\n    snakeColor: \"#cec87e\",\r\n    foodColor: \"#74714e\",\r\n    background: \"#e6e6c4\",\r\n    textColor: \"#3e3e2c\",\r\n  },\r\n};\r\n\r\nlet preferences = {\r\n  class: \"\",\r\n  set: ({ payload, attr }) => {\r\n    if (attr) {\r\n      preferences.class[attr] = payload;\r\n      return;\r\n    }\r\n\r\n    preferences.class = payload;\r\n  },\r\n};\r\n\r\nexport default preferences;\r\n","import { root } from \"../global/CSSroot.js\";\r\nimport preferences from \"../global/preferences.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  gameStarted,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport handleFoodEaten from \"./handleFoodEaten.js\";\r\nimport handlePlaceTile from \"./handlePlaceTile.js\";\r\nimport { bombsInterval, bombsState } from \"../global/bombs.js\";\r\n\r\nconst handleBonus = ({ type }) => {\r\n  let snakePosLen;\r\n\r\n  switch (type) {\r\n    case \"Nystagmus\":\r\n      preferences.class.handleNystagmus();\r\n      break;\r\n    case \"+5 points\":\r\n      setTimeout(() => {\r\n        for (let i = 0; i < snakePositions.length; i++) {\r\n          let { x, y } = snakePositions[i];\r\n          if (board[y][x].classList.contains(\"tile--snake-added-point\"))\r\n            board[y][x].classList.remove(\"tile--snake-added-point\");\r\n          else break;\r\n        }\r\n      }, 500);\r\n\r\n      snakePosLen = snakePositions.length;\r\n\r\n      for (let i = 0; i < snakePosLen; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[0];\r\n        const nextElem = board[nextY][nextX];\r\n        if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n          nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n          nextElem.classList.remove(\"tile--snake\");\r\n          snakePositions.shift();\r\n          snake.class.length--;\r\n        } else break;\r\n      }\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const newCoordinates = handleFoodEaten();\r\n\r\n        if (!gameStarted.val) return;\r\n\r\n        if (newCoordinates) {\r\n          const { newX, newY } = newCoordinates;\r\n\r\n          snake.class.length++;\r\n          handleDisplay({ snakeLength: snake.class.length });\r\n          snakePositions.unshift({ x: newX, y: newY });\r\n          board[newY][newX].classList.add(\"tile--snake\");\r\n          board[newY][newX].classList.add(\"tile--snake-added-point\");\r\n        }\r\n      }\r\n      break;\r\n    case \"-5 points\":\r\n      setTimeout(() => {\r\n        let snakePosLen = snakePositions.length;\r\n        for (let i = 0; i < snakePosLen; i++) {\r\n          const { x: nextX, y: nextY } = snakePositions[0];\r\n          const nextElem = board[nextY][nextX];\r\n          if (nextElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n            nextElem.classList.remove(\"tile--snake-subtracted-point\");\r\n            nextElem.classList.remove(\"tile--snake\");\r\n            snakePositions.shift();\r\n            snake.class.length--;\r\n            handleDisplay({ snakeLength: snake.class.length });\r\n          } else break;\r\n        }\r\n      }, 500);\r\n\r\n      for (let i = 0; i < 5; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[i];\r\n\r\n        if (board[nextY][nextX].classList.contains(\"tile--snake-added-point\")) {\r\n          board[nextY][nextX].classList.remove(\"tile--snake-added-point\");\r\n          board[nextY][nextX].classList.add(\"tile--snake-subtracted-point\");\r\n        } else {\r\n          if (i === snakePositions.length - 1) break;\r\n          else\r\n            board[nextY][nextX].classList.add(\"tile--snake-subtracted-point\");\r\n        }\r\n      }\r\n      break;\r\n    case \"Bombs\":\r\n      navigator.vibrate(100);\r\n      if (bombsInterval.val === \"\")\r\n        bombsInterval.set({\r\n          payload: setInterval(() => {\r\n            bombsState.toggle();\r\n\r\n            console.log(\"interval\");\r\n\r\n            root.style.setProperty(\r\n              \"--bomb-color\",\r\n              bombsState.state ? \"#000\" : \"#f00\"\r\n            );\r\n          }, 250),\r\n        });\r\n      for (let i = 0; i < Math.floor(boardSize * (2 / 5)); i++) {\r\n        handlePlaceTile({ mode: \"bomb\" });\r\n      }\r\n      break;\r\n    default:\r\n      console.error(\"#ERR -> Nieznany typ bonusu!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleBonus;\r\n","import RandInt from \"../functions/RandInt.js\";\r\nimport handleBonus from \"../functions/handleBonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  snake,\r\n} from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\n\r\nclass Bonus extends Boost {\r\n  constructor(x, y, name, bonusID, imgPATH, audioPATH) {\r\n    super(x, y, name);\r\n    this.bonusID = bonusID;\r\n    this.imgPATH = imgPATH;\r\n    this.audioPATH = audioPATH;\r\n\r\n    const intervalRange =\r\n      (interval.val *\r\n        RandInt({\r\n          min: 10,\r\n          max: 200,\r\n        })) /\r\n      100;\r\n\r\n    this.boostInterval = setInterval(this.handleBonusTranslate, intervalRange);\r\n  }\r\n\r\n  handleBonusTranslate = () => {\r\n    // TODO: bonus translation, check whether the bonus has reached the bottom of the board, if so - delete this bonus from bonuses using this.bonusID\r\n    if (!gameStarted.val) {\r\n      clearInterval(this.boostInterval);\r\n      return;\r\n    }\r\n    board[this.y][this.x].classList.remove(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = \"\";\r\n    this.y++;\r\n\r\n    if (this.x === snake.class.x && this.y === snake.class.y) {\r\n      clearInterval(this.boostInterval);\r\n      console.log(\"eaten -> bonus ate snake\");\r\n\r\n      const foundBonusID = bonuses.findIndex(\r\n        (bns) => bns.bonusID === this.bonusID\r\n      );\r\n\r\n      bonuses.splice(foundBonusID, 1);\r\n\r\n      handleBonus({ type: this.name });\r\n\r\n      if (!mute.isMuted) {\r\n        const bonus = new Audio();\r\n        bonus.src = this.audioPATH;\r\n        bonus.play();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.y === boardSize) {\r\n      const foundBonusID = bonuses.findIndex(\r\n        (bns) => bns.bonusID === this.bonusID\r\n      );\r\n      clearInterval(this.boostInterval);\r\n      bonuses.splice(foundBonusID, 1);\r\n      return;\r\n    }\r\n\r\n    board[this.y][this.x].classList.add(\"tile--boost\");\r\n    board[this.y][this.x].style.backgroundImage = `url('${\r\n      bonusFiles[this.name].img\r\n    }')`;\r\n  };\r\n}\r\n\r\nexport default Bonus;\r\n","import GameOver from \"../functions/GameOver.js\";\r\nimport RandInt from \"../functions/RandInt.js\";\r\nimport { bomb } from \"../functions/handleInitializeAudio.js\";\r\nimport { bombsInterval } from \"../global/bombs.js\";\r\nimport { bombs } from \"../global/bombs.js\";\r\nimport { board, gameStarted, mute, snake } from \"../global/variables.js\";\r\nimport Boost from \"./Boost.js\";\r\n\r\nclass Bomb extends Boost {\r\n  constructor(x, y) {\r\n    super(x, y);\r\n    this.bombId = bombs.length;\r\n\r\n    bombs.push(this);\r\n\r\n    const BOMB_INTERVAL_RANGE = RandInt({\r\n      min: 50,\r\n      max: 250,\r\n    });\r\n\r\n    this.bombInterval = setInterval(\r\n      this.handleBombTranslate,\r\n      BOMB_INTERVAL_RANGE\r\n    );\r\n  }\r\n\r\n  handleBombTranslate = () => {\r\n    if (!gameStarted.val) {\r\n      clearInterval(this.bombInterval);\r\n      return;\r\n    }\r\n    board[this.y][this.x].classList.remove(\"tile--bomb\");\r\n\r\n    if (this.x === 0) {\r\n      clearInterval(this.bombInterval);\r\n\r\n      const foundIdOfBomb = bombs.findIndex(\r\n        (bomb) => bomb.bombId === this.bombId\r\n      );\r\n\r\n      console.log(bombs);\r\n      bombs.splice(foundIdOfBomb, 1);\r\n      console.log(bombs);\r\n\r\n      if (bombs.length === 0) {\r\n        clearInterval(bombsInterval.val);\r\n        bombsInterval.set({ payload: \"\" });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    this.x--;\r\n\r\n    board[this.y][this.x].classList.add(\"tile--bomb\");\r\n    this.handleBombCollide();\r\n  };\r\n\r\n  handleBombCollide = () => {\r\n    if (this.x === snake.class.x && this.y === snake.class.y) {\r\n      if (!mute.isMuted) bomb.play();\r\n\r\n      board[this.y][this.x].classList.remove(\"tile--bomb\");\r\n      clearInterval(this.bombInterval);\r\n\r\n      GameOver();\r\n      return;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Bomb;\r\n","import { board, boardSize, food } from \"../global/variables.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Food from \"../classes/Food.js\";\r\nimport Bonus from \"../classes/Bonus.js\";\r\nimport { bonusFiles, bonuses } from \"../global/bonuses.js\";\r\nimport Bomb from \"../classes/Bomb.js\";\r\nimport GameOver from \"./GameOver.js\";\r\n\r\nconst handlePlaceTile = ({ mode, bonus }) => {\r\n  if (mode === \"bonus\") {\r\n    // do something if bonus === 'bonus'\r\n    let newBonus;\r\n    if (bonus)\r\n      newBonus = new Bonus(\r\n        0,\r\n        0,\r\n        bonus.name,\r\n        bonuses.length,\r\n        bonus.imgPATH,\r\n        bonus.audioPATH\r\n      );\r\n\r\n    const freeTiles = [];\r\n\r\n    board[0].forEach((bonus, index) => {\r\n      if (!bonus.classList.contains(\"tile--boost\")) {\r\n        freeTiles.push(index);\r\n      }\r\n    });\r\n\r\n    if (freeTiles.length === 0) return;\r\n\r\n    let rand = RandInt({\r\n      min: 0,\r\n      max: freeTiles.length - 1,\r\n    });\r\n\r\n    board[0][freeTiles[rand]].classList.add(\"tile--boost\");\r\n    board[0][\r\n      freeTiles[rand]\r\n    ].style.backgroundImage = `url('${newBonus.imgPATH}')`;\r\n\r\n    newBonus.x = freeTiles[rand];\r\n\r\n    bonuses.push(newBonus);\r\n\r\n    return;\r\n  }\r\n\r\n  const tiles = document.querySelectorAll(\".tile\");\r\n  const freeTiles = document.querySelectorAll(\".tile:not(.tile--snake)\");\r\n\r\n  if (freeTiles.length === 0) {\r\n    GameOver();\r\n    return;\r\n  }\r\n\r\n  const randTileId = RandInt({ min: 0, max: freeTiles.length - 1 });\r\n\r\n  const indexOfFreeTile = Array.from(tiles).indexOf(freeTiles[randTileId]);\r\n  const tileCoordinates = {\r\n    x: indexOfFreeTile % boardSize,\r\n    y: Math.floor(indexOfFreeTile / boardSize),\r\n  };\r\n\r\n  const { x, y } = tileCoordinates;\r\n\r\n  // mark food or bonus on the board\r\n  switch (mode) {\r\n    case \"food\":\r\n      food.class = new Food(x, y);\r\n\r\n      board[food.class.y][food.class.x].classList.add(\"tile--food\");\r\n      break;\r\n    case \"bomb\":\r\n      let rand = RandInt({\r\n        min: 0,\r\n        max: boardSize - 1,\r\n      });\r\n\r\n      board[rand][boardSize - 1].classList.add(\"tile--bomb\");\r\n\r\n      new Bomb(boardSize - 1, rand);\r\n      break;\r\n    default:\r\n      console.error(\"#ERR! -> Przesłano niepoprawny typ bonusu\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handlePlaceTile;\r\n","export default __webpack_public_path__ + \"assets/SPEED2X.png\";","export default __webpack_public_path__ + \"assets/SPEED2X.wav\";","export default __webpack_public_path__ + \"assets/SPEED 2Xlower.png\";","export default __webpack_public_path__ + \"assets/SPEED 2Xlower.wav\";","export default __webpack_public_path__ + \"assets/Freeze.png\";","export default __webpack_public_path__ + \"assets/Freeze.mp3\";","export default __webpack_public_path__ + \"assets/Bombs.png\";","export default __webpack_public_path__ + \"assets/bombs.wav\";","export default __webpack_public_path__ + \"assets/+5 points.wav\";","export default __webpack_public_path__ + \"assets/-5 points.wav\";","export default __webpack_public_path__ + \"assets/+5 points.png\";","export default __webpack_public_path__ + \"assets/-5 points.png\";","import RandInt from \"../functions/RandInt.js\";\r\nimport handlePlaceTile from \"../functions/handlePlaceTile.js\";\r\n\r\nimport speed2XImg from \"../../assets/SPEED2X.png\";\r\nimport speed2XAudio from \"../../assets/SPEED2X.wav\";\r\nimport speed2XImgLower from \"../../assets/SPEED 2Xlower.png\";\r\nimport speed2XAudioLower from \"../../assets/SPEED 2Xlower.wav\";\r\nimport FreezeImg from \"../../assets/Freeze.png\";\r\nimport FreezeAudio from \"../../assets/Freeze.mp3\";\r\nimport BombsImg from \"../../assets/Bombs.png\";\r\nimport BombsWAV from \"../../assets/bombs.wav\";\r\nimport Plus5PointsWAV from \"../../assets/+5 points.wav\";\r\nimport Minus5PointsWAV from \"../../assets/-5 points.wav\";\r\nimport Plus5PointsPNG from \"../../assets/+5 points.png\";\r\nimport Minus5PointsPNG from \"../../assets/-5 points.png\";\r\nimport NystagmusPNG from \"../../assets/Nystagmus.png\";\r\nimport NystagmusWAV from \"../../assets/nystagmus.wav\";\r\n\r\nexport const bonusFiles = {\r\n  \"SPEED 2X\": {\r\n    img: speed2XImg,\r\n    audio: speed2XAudio,\r\n  },\r\n  \"SPEED /2X\": {\r\n    img: speed2XImgLower,\r\n    audio: speed2XAudioLower,\r\n  },\r\n  Freeze: {\r\n    img: FreezeImg,\r\n    audio: FreezeAudio,\r\n  },\r\n  Bombs: {\r\n    img: BombsImg,\r\n    audio: BombsWAV,\r\n  },\r\n  Nystagmus: {\r\n    img: NystagmusPNG,\r\n    audio: NystagmusWAV,\r\n  },\r\n  \"+5 points\": {\r\n    img: Plus5PointsPNG,\r\n    audio: Plus5PointsWAV,\r\n  },\r\n  \"-5 points\": {\r\n    img: Minus5PointsPNG,\r\n    audio: Minus5PointsWAV,\r\n  },\r\n};\r\n\r\nexport const bombs = [];\r\n\r\nexport const bonuses = [];\r\n\r\nexport const handleGenerateBonuses = () => {\r\n  const rand = RandInt({\r\n    min: 0,\r\n    max: 100,\r\n  });\r\n\r\n  const chosenBonuses = [\r\n    ...bonusesProbabilities.filter((bonus) => bonus.probability >= rand),\r\n  ];\r\n\r\n  for (const bonus of chosenBonuses) {\r\n    handlePlaceTile({\r\n      mode: \"bonus\",\r\n      bonus: {\r\n        name: bonus.name,\r\n        imgPATH: bonusFiles[bonus.name].img,\r\n        audioPATH: bonusFiles[bonus.name].audio,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const bonusesProbabilities = [\r\n  {\r\n    name: \"SPEED 2X\",\r\n    // probability: 70,\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"SPEED /2X\",\r\n    // probability: 20,\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Freeze\",\r\n    // probability: 60,\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Bombs\",\r\n    // probability: 100,\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"Nystagmus\",\r\n    // probability: 15,\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"+5 points\",\r\n    // probability: 25,\r\n    probability: 100,\r\n  },\r\n  {\r\n    name: \"-5 points\",\r\n    // probability: 80,\r\n    probability: 100,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"assets/Nystagmus.png\";","export default __webpack_public_path__ + \"assets/nystagmus.wav\";","import POINT_SRC from \"../../assets/point.mp3\";\r\nimport GAME_OVER_SRC from \"../../assets/gameover.wav\";\r\nimport SNAKESPEED_SRC from \"../../assets/speed_acceleration.wav\";\r\nimport JUMP_SRC from \"../../assets/jump.wav\";\r\nimport START_SRC from \"../../assets/start.wav\";\r\nimport BOMB_SRC from \"../../assets/explosion.wav\";\r\nimport { bonusFiles } from \"../global/bonuses.js\";\r\n\r\nexport const start = new Audio();\r\nexport const jump = new Audio();\r\nexport const snakespeed = new Audio();\r\nexport const point = new Audio();\r\nexport const gameOver = new Audio();\r\nexport const bonus = new Audio();\r\nexport const bomb = new Audio();\r\n\r\nconst handleInitializeAudio = () => {\r\n  point.src = POINT_SRC;\r\n  gameOver.src = GAME_OVER_SRC;\r\n  snakespeed.src = SNAKESPEED_SRC;\r\n  jump.src = JUMP_SRC;\r\n  start.src = START_SRC;\r\n  bomb.src = BOMB_SRC;\r\n  bomb.volume = 1;\r\n\r\n  start.volume = 0.07;\r\n  jump.volume = 0.1;\r\n  point.volue = 0.07;\r\n  snakespeed.volume = 0.3;\r\n  gameOver.volume = 0.3;\r\n  bonus.volume = 0.1;\r\n};\r\n\r\nexport default handleInitializeAudio;\r\n","class Snake {\r\n  constructor(direction, length, speed, x, y, jumps = 0) {\r\n    this.direction = direction;\r\n    this.length = length;\r\n    this.speed = speed;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.jumps = jumps;\r\n  }\r\n}\r\n\r\nexport default Snake;\r\n","import handleInitializeAudio from \"./handleInitializeAudio.js\";\r\nimport RandInt from \"./RandInt.js\";\r\nimport Snake from \"../classes/Snake.js\";\r\nimport {\r\n  board,\r\n  boardSize,\r\n  snake,\r\n  snakePositions,\r\n  timer,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { gameBoard } from \"../global/elements.js\";\r\nimport handlePlaceTile from \"./handlePlaceTile.js\";\r\n\r\nexport const handleAppendBoard = (tileCSS) => {\r\n  let tilesQty = 0;\r\n\r\n  for (let i = 0; i < boardSize; i++) {\r\n    let row = [];\r\n    for (let j = 0; j < boardSize; j++) {\r\n      let tile = document.createElement(\"div\");\r\n\r\n      tile.classList.add(\"tile\");\r\n      tile.style.width = `${tileCSS.width - 2}px`;\r\n      tile.style.height = `${tileCSS.height - 2}px`;\r\n\r\n      gameBoard.appendChild(tile);\r\n      const tileQuery = document.querySelectorAll(\".tile\");\r\n\r\n      row.push(tileQuery[tilesQty]);\r\n\r\n      tilesQty++;\r\n    }\r\n    board.push(row);\r\n  }\r\n};\r\n\r\nexport const handleAppendSnake = () => {\r\n  for (let i = 0; i < snake.class.length; i++) {\r\n    let snakePos = {\r\n      x: snake.class.x,\r\n      y: snake.class.y + i,\r\n    };\r\n\r\n    snakePositions.unshift({ x: snakePos.x, y: snakePos.y });\r\n\r\n    let snakeEl = board[snake.class.y + i][snake.class.x];\r\n    snakeEl.classList.add(\"tile--snake\");\r\n  }\r\n};\r\n\r\nexport const getTileCSS = () => {\r\n  return {\r\n    width: gameBoard.clientWidth / boardSize,\r\n    height: gameBoard.clientHeight / boardSize,\r\n  };\r\n};\r\n\r\nconst handleGenerateBoard = () => {\r\n  handleInitializeAudio();\r\n\r\n  // TODO: generowanie planszy\r\n  let snakePos = {\r\n    x: RandInt({\r\n      min: Math.floor(boardSize / 2) - 3,\r\n      max: Math.floor(boardSize / 2) + 3,\r\n    }),\r\n    y: RandInt({\r\n      min: Math.floor(boardSize / 2) - 1,\r\n      max: Math.floor(boardSize / 2) + 1,\r\n    }),\r\n  };\r\n\r\n  snake.set({\r\n    payload: new Snake(\r\n      null,\r\n      Math.round(boardSize / 3),\r\n      1,\r\n      snakePos.x,\r\n      snakePos.y\r\n    ),\r\n  });\r\n\r\n  timer.set({ payload: 0 });\r\n\r\n  handleDisplay({\r\n    boardSize,\r\n    speed: snake.class.speed.toFixed(2),\r\n    snakeLength: snake.class.length,\r\n    timer: `${timer.time}`,\r\n  });\r\n\r\n  let tileCSS = getTileCSS();\r\n\r\n  handleAppendBoard(tileCSS);\r\n  handleAppendSnake();\r\n\r\n  handlePlaceTile({ mode: \"food\" });\r\n};\r\n\r\nexport default handleGenerateBoard;\r\n","import { bombs } from \"../global/bombs.js\";\r\nimport {\r\n  board,\r\n  food,\r\n  gameStarted,\r\n  snake,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport GameOver from \"./GameOver.js\";\r\nimport handleBonusIsEaten from \"./handleBonusIsEaten.js\";\r\n\r\nconst handleMoveSnake = () => {\r\n  food.class.handleIsEaten();\r\n  handleBonusIsEaten();\r\n  for (const bomb of bombs) bomb.handleBombCollide();\r\n\r\n  if (!gameStarted.val) return;\r\n\r\n  const { x, y } = snakePositions[0];\r\n\r\n  if (board[snake.class.y][snake.class.x].classList.contains(\"tile--snake\")) {\r\n    GameOver();\r\n    return;\r\n  }\r\n\r\n  const lastElem = board[y][x] ? board[y][x] : undefined;\r\n\r\n  if (lastElem) {\r\n    if (lastElem.classList.contains(\"tile--snake-added-point\")) {\r\n      for (let i = 0; i < snakePositions.length; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[i];\r\n        const newElem = board[nextY][nextX];\r\n\r\n        if (!newElem.classList.contains(\"tile--snake-added-point\")) {\r\n          newElem.classList.add(\"tile--snake-added-point\");\r\n          break;\r\n        }\r\n      }\r\n\r\n      lastElem.classList.remove(\"tile--snake-added-point\");\r\n    } else if (lastElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n      for (let i = 0; i < snakePositions.length; i++) {\r\n        const { x: nextX, y: nextY } = snakePositions[i];\r\n        const newElem = board[nextY][nextX];\r\n\r\n        if (!newElem.classList.contains(\"tile--snake-subtracted-point\")) {\r\n          newElem.classList.add(\"tile--snake-subtracted-point\");\r\n          break;\r\n        }\r\n      }\r\n\r\n      lastElem.classList.remove(\"tile--snake-subtracted-point\");\r\n    }\r\n  }\r\n\r\n  board[y][x].classList.remove(\"tile--snake\");\r\n  snakePositions.shift();\r\n  board[snake.class.y][snake.class.x].classList.add(\"tile--snake\");\r\n  snakePositions.push({ x: snake.class.x, y: snake.class.y });\r\n};\r\n\r\nexport default handleMoveSnake;\r\n","import { bonuses } from \"../global/bonuses.js\";\r\nimport { board, mute, snake } from \"../global/variables.js\";\r\nimport handleBonus from \"./handleBonus.js\";\r\n\r\nconst handleBonusIsEaten = () => {\r\n  let selectedBonus;\r\n\r\n  bonuses.map((bonus, index) => {\r\n    if (bonus.x === snake.class.x && bonus.y === snake.class.y)\r\n      selectedBonus = { bonus, index };\r\n  });\r\n\r\n  if (selectedBonus) {\r\n    const { bonus: foundBonus, index } = selectedBonus;\r\n\r\n    clearInterval(bonuses[index].boostInterval);\r\n\r\n    console.log(\"eaten -> snake ate bonus\");\r\n    const foundTile = board[foundBonus.y][foundBonus.x];\r\n\r\n    foundTile.classList.remove(\"tile--boost\");\r\n    foundTile.style.backgroundImage = \"\";\r\n\r\n    bonuses.splice(index, 1);\r\n\r\n    handleBonus({ type: foundBonus.name });\r\n\r\n    if (!mute.isMuted) {\r\n      const bonus = new Audio();\r\n      bonus.src = foundBonus.audioPATH;\r\n      bonus.play();\r\n    }\r\n  }\r\n};\r\n\r\nexport default handleBonusIsEaten;\r\n","import { bonuses, handleGenerateBonuses } from \"../global/bonuses.js\";\r\nimport { parameterSpeed } from \"../global/elements.js\";\r\nimport {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  snakeDidMove,\r\n  SPEED_CONSTANT,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { snakespeed } from \"./handleInitializeAudio.js\";\r\nimport handleUpdateSnake from \"./handleUpdateSnake.js\";\r\n\r\nconst handleIncreaseSnakeSpeed = () => {\r\n  if (snake.class.jumps % (Math.floor(boardSize / 10) * 9) === 0) {\r\n    snake.class.speed = parseFloat((snake.class.speed + 0.1).toFixed(2));\r\n\r\n    let dividedSpeed = parseFloat((snake.class.speed / 10).toFixed(3));\r\n\r\n    let speedModulo = snake.class.speed % dividedSpeed;\r\n    console.log(snake.class.speed, dividedSpeed, speedModulo);\r\n\r\n    if (\r\n      !mute.isMuted &&\r\n      (snake.class.speed < 2 ||\r\n        (snake.class.speed >= 2 &&\r\n          Math.floor(snake.class.speed % (snake.class.speed / 10)) === 0))\r\n    ) {\r\n      snakespeed.play();\r\n    }\r\n\r\n    parameterSpeed.classList.add(\"parameter-speed--acceleration\");\r\n    handleDisplay({ speed: snake.class.speed.toFixed(2) });\r\n\r\n    setTimeout(() => {\r\n      parameterSpeed.classList.remove(\"parameter-speed--acceleration\");\r\n    }, 1000);\r\n\r\n    interval.val =\r\n      750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n    clearInterval(gameInterval.interval);\r\n    gameInterval.set(setInterval(handleJump, interval.val));\r\n  }\r\n};\r\n\r\nconst handleJump = () => {\r\n  if (Math.random() < 1 && bonuses.length === 0) handleGenerateBonuses();\r\n\r\n  handleUpdateSnake();\r\n\r\n  if (!gameStarted.val) return;\r\n\r\n  snake.class.jumps++;\r\n\r\n  // for (const bonus of bonuses) bonus.handleTransformBonus();\r\n\r\n  handleIncreaseSnakeSpeed();\r\n\r\n  snakeDidMove.set(true);\r\n};\r\n\r\nexport default handleJump;\r\n","import { boardSize, snake } from \"../global/variables.js\";\r\nimport handleMoveSnake from \"./handleMoveSnake.js\";\r\n\r\nconst handleUpdateSnake = () => {\r\n  switch (snake.class.direction) {\r\n    case \"W\":\r\n      snake.class.y = snake.class.y === 0 ? boardSize - 1 : snake.class.y - 1;\r\n      handleMoveSnake();\r\n      break;\r\n    case \"S\":\r\n      snake.class.y = snake.class.y === boardSize - 1 ? 0 : snake.class.y + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"A\":\r\n      snake.class.x = snake.class.x === 0 ? boardSize - 1 : snake.class.x - 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    case \"D\":\r\n      snake.class.x = snake.class.x === boardSize - 1 ? 0 : snake.class.x + 1;\r\n\r\n      handleMoveSnake();\r\n      break;\r\n    default:\r\n      console.error(\"#ERR: Nieprawidłowy kierunek!\");\r\n      break;\r\n  }\r\n};\r\n\r\nexport default handleUpdateSnake;\r\n","import { sound } from \"../global/elements.js\";\r\nimport {\r\n  gameStarted,\r\n  mute,\r\n  snake,\r\n  snakeDidMove,\r\n  snakePositions,\r\n} from \"../global/variables.js\";\r\nimport handleStartGame from \"./handleStartGame.js\";\r\n\r\nconst handleKeyPress = ({ key }) => {\r\n  if (key === \"M\") {\r\n    mute.isMuted = !mute.isMuted;\r\n    sound.classList.toggle(\"sound--muted\");\r\n    return;\r\n  }\r\n\r\n  if (\r\n    (key === \"W\" && snake.class.direction === \"S\") ||\r\n    (key === \"S\" && snake.class.direction === \"W\") ||\r\n    (key === \"A\" && snake.class.direction === \"D\") ||\r\n    (key === \"D\" && snake.class.direction === \"A\")\r\n  )\r\n    return;\r\n\r\n  if (!gameStarted.val && snake.class.jumps === 0) {\r\n    if (key === \"S\") {\r\n      snakePositions.reverse();\r\n      snake.set({\r\n        attr: \"y\",\r\n        payload: snakePositions[snakePositions.length - 1].y,\r\n      });\r\n    }\r\n\r\n    snake.class.direction = key;\r\n\r\n    handleStartGame();\r\n  }\r\n\r\n  if (gameStarted.val && snakeDidMove.state) {\r\n    snakeDidMove.set(false);\r\n    snake.class.direction = key;\r\n  }\r\n};\r\n\r\nexport default handleKeyPress;\r\n","import {\r\n  boardSize,\r\n  gameInterval,\r\n  gameStarted,\r\n  interval,\r\n  mute,\r\n  sizeRange,\r\n  snake,\r\n  SPEED_CONSTANT,\r\n  timer,\r\n  timerInterval,\r\n} from \"../global/variables.js\";\r\nimport handleDisplay from \"./handleDisplay.js\";\r\nimport { jump, start } from \"./handleInitializeAudio.js\";\r\nimport handleJump from \"./handleJump.js\";\r\n\r\nconst handleStartGame = () => {\r\n  gameStarted.val = true;\r\n\r\n  if (!mute.isMuted) {\r\n    start.play();\r\n  }\r\n\r\n  interval.val =\r\n    750 / (boardSize / sizeRange.max) / SPEED_CONSTANT / snake.class.speed;\r\n\r\n  gameInterval.set(setInterval(handleJump, interval.val));\r\n\r\n  timerInterval.set(\r\n    setInterval(() => {\r\n      if (!mute.isMuted) {\r\n        jump.play();\r\n      }\r\n\r\n      timer.increment();\r\n      handleDisplay({ timer: timer.time });\r\n    }, 1000)\r\n  );\r\n};\r\n\r\nexport default handleStartGame;\r\n","export default __webpack_public_path__ + \"assets/1st-place.png\";","import Preferences from \"./script/classes/Preferences.js\";\r\nimport handleGenerateBoard from \"./script/functions/handleGenerateBoard.js\";\r\nimport handleKeyPress from \"./script/functions/handleKeyPress.js\";\r\nimport { currentTheme } from \"./script/global/CSSroot.js\";\r\nimport { controlBtns, sound } from \"./script/global/elements.js\";\r\nimport {\r\n  W,\r\n  A,\r\n  S,\r\n  D,\r\n  M,\r\n  topKey,\r\n  bottomKey,\r\n  leftKey,\r\n  rightKey,\r\n} from \"./script/global/keys.js\";\r\nimport preferences from \"./script/global/preferences.js\";\r\nimport { mute } from \"./script/global/variables.js\";\r\nimport \"./style.css\";\r\nimport TROPHY_SRC from \"./assets/1st-place.png\";\r\nimport { handleFetchRecords } from \"./script/global/leaderboard.js\";\r\n\r\nsound.addEventListener(\"click\", () => {\r\n  mute.isMuted = !mute.isMuted;\r\n  sound.classList.toggle(\"sound--muted\");\r\n});\r\n\r\ncontrolBtns.forEach((control, index) => {\r\n  control.addEventListener(\"touchstart\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"touchend\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n\r\n  control.addEventListener(\"mousedown\", () => {\r\n    control.classList.add(\"control--pressed\");\r\n  });\r\n\r\n  control.addEventListener(\"mouseup\", () => {\r\n    const controls = [\"W\", \"S\", \"A\", \"D\"];\r\n\r\n    control.classList.remove(\"control--pressed\");\r\n\r\n    handleKeyPress({ key: controls[index] });\r\n  });\r\n});\r\n\r\nlet key;\r\n\r\ndocument.addEventListener(\"keydown\", (e) => {\r\n  if (document.activeElement.tagName === \"INPUT\") return;\r\n\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      controlBtns[0].classList.add(\"control--pressed\");\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      controlBtns[1].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      controlBtns[2].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      controlBtns[3].classList.add(\"control--pressed\");\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\ndocument.addEventListener(\"keyup\", (e) => {\r\n  if (document.activeElement.tagName === \"INPUT\") return;\r\n\r\n  let keyCode = e.keyCode || e.key || e.keyIdentifier;\r\n\r\n  controlBtns.forEach((control) =>\r\n    control.classList.remove(\"control--pressed\")\r\n  );\r\n\r\n  switch (keyCode) {\r\n    case W:\r\n    case topKey:\r\n      key = \"W\";\r\n\r\n      break;\r\n    case S:\r\n    case bottomKey:\r\n      key = \"S\";\r\n\r\n      break;\r\n    case A:\r\n    case leftKey:\r\n      key = \"A\";\r\n\r\n      break;\r\n    case D:\r\n    case rightKey:\r\n      key = \"D\";\r\n\r\n      break;\r\n    case M:\r\n      key = \"M\";\r\n\r\n      break;\r\n\r\n    default:\r\n      return;\r\n  }\r\n\r\n  handleKeyPress({ key });\r\n});\r\n\r\nconst trophy = document.querySelector(\"[data-trophy]\");\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  // TODO: fetch records using handleFetchRecords() function, push the records into the table and then generate the leaderboard\r\n\r\n  handleFetchRecords({ from: 0 });\r\n\r\n  trophy.src = TROPHY_SRC;\r\n  preferences.set({\r\n    payload: new Preferences({\r\n      boardColor: currentTheme.boardColor,\r\n      textColor: currentTheme.textColor,\r\n      tileColor: currentTheme.tileColor,\r\n      foodColor: currentTheme.foodColor,\r\n      background: currentTheme.background,\r\n      snakeColor: currentTheme.snakeColor,\r\n    }),\r\n  });\r\n  handleGenerateBoard();\r\n});\r\n","export const W = 87;\r\nexport const A = 65;\r\nexport const S = 83;\r\nexport const D = 68;\r\nexport const M = 77;\r\n\r\nexport const topKey = 38;\r\nexport const bottomKey = 40;\r\nexport const leftKey = 37;\r\nexport const rightKey = 39;\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","root","querySelector","rs","getComputedStyle","CSS","getPropertyValue","currentTheme","boardColor","localStorage","getItem","snakeColor","tileColor","foodColor","background","constructor","board","style","setProperty","textColor","handlePickTheme","theme","setItem","handleNystagmus","nystagmusInterval","state","setInterval","setTimeout","clearInterval","min","max","Math","ceil","floor","random","size","sizeRange","input","prompt","parseInt","alert","boardSize","snake","class","set","payload","attr","food","gameStarted","val","value","snakePositions","timer","time","increment","mute","isMuted","toggle","interval","gameInterval","func","timerInterval","snakeDidMove","x","y","name","parameterSpeed","gameBoard","sound","controlBtns","querySelectorAll","snakeLength","speed","textContent","bombs","bombsState","bombsInterval","container","pointsEl","speedEl","lengthEl","boardSizeEl","timerEl","usernameInput","playAgain","pencil","shareForm","topPlayers","username","message","imgURL","statistics","points","hours","minutes","seconds","published","year","month","day","leaderboardTop","handleCreateElement","index","record","profile_src","leaderboardRecord","createElement","classList","add","recordTrophy","trophy","playerPos","leaderboardInfo","leaderboardProfile","leaderboardProfileImg","leaderboardUsername","leaderboardMessage","leaderboardMessageIcon","leaderboardMessageContent","leaderboardStatistics","leaderboardStatisticsArr","statisticIcons","leaderboardStatistic","statisticIcon","split","map","className","statisticSpan","toFixed","appendChild","push","stat","display","console","log","sharePos","preventDefault","handlePlayAgain","forEach","tile","remove","snakePosLen","shift","pop","bonusesLen","bonuses","boostInterval","bombsLen","bombInterval","removeEventListener","usernameInputFocus","focus","totalPoints","round","addEventListener","navigator","vibrate","gameOver","play","firstX","firstY","nextX","nextY","undefined","newTile","newX","newY","subX","subY","contains","handleIsEaten","mode","firstElem","nextElem","unshift","preferences","type","newCoordinates","error","bonusID","imgPATH","audioPATH","super","intervalRange","handleBonusTranslate","backgroundImage","foundBonusID","findIndex","bns","splice","bonusFiles","img","bonus","Audio","bombId","BOMB_INTERVAL_RANGE","handleBombTranslate","foundIdOfBomb","bomb","handleBombCollide","newBonus","freeTiles","rand","tiles","randTileId","indexOfFreeTile","Array","from","indexOf","tileCoordinates","audio","Freeze","Bombs","Nystagmus","bonusesProbabilities","probability","snakespeed","direction","jumps","volume","volue","snakePos","tileCSS","tilesQty","row","j","width","height","tileQuery","handleAppendBoard","clientWidth","clientHeight","handleAppendSnake","selectedBonus","foundBonus","foundTile","lastElem","newElem","handleJump","chosenBonuses","filter","handleGenerateBonuses","parseFloat","dividedSpeed","speedModulo","handleIncreaseSnakeSpeed","key","reverse","control","activeElement","tagName","keyCode","keyIdentifier","to","entries","recordElem","handleFetchRecords"],"sourceRoot":""}